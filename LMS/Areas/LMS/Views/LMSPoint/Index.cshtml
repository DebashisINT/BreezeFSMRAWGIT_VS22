
@using LMS.Models;
@model LMS.Models.LMSPointModel
@{
    ViewBag.Title = "Point Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

    .btn-export:hover {
        background: #a24716 !important;
        color: #fff;
    }
    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 10px 20px 10px;
    }

    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 8px;
            right: -2px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #1b79d0;
            border-color: #1b79d0;
        }

        .add-btn .btn-icon i {
            color: #054682;
        }

    .add-btn {
        background: #054682;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 38px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #238945;
    }

    .show-btn {
        background-color: #238945;
    }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }
</style>
<script>
    var Is_PageLoad = "0";

    $(function () {

        $('body').on('click', '#btnshow', function () {
            Is_PageLoad = "1";
            gridList.Refresh();
        });

        $('#ddlAppIds').on('click', function () {
            var selectedValue = "1"; // XLSX export value
            var desg = $("#drpdesignation").val();
            var usrtype = $("#ddlusertypes").val();
            var url = '@Url.Action("ExporPointList", "LMSPoint", new { type = "_type_" })';
            window.location.href = url.replace("_type_", selectedValue);
        });
    });

    function OnStartCallback(s, e) {
        e.customArgs["Is_PageLoad"] = Is_PageLoad;
    }
    function AddPoint() {
        $("#hdnID").val('0');
        $("#ddlSection").val('0');
        $("#txtPoints").val('');
        $("#PointModal").modal('show')
    }
    function SavePoint() {
        var id = $("#hdnID").val();
        if ($("#ddlSection").val().trim() == "0") {
            //jAlert('Enter Select Section to proceed.');
            Swal.fire({
                icon: 'warning',
                title: 'Warning',
                text: 'Enter Select Section to proceed..'
            });
            return false;
        }
        else if ($("#txtPoints").val().trim() == "") {
            //jAlert('Enter Points  to proceed.');
            Swal.fire({
                icon: 'warning',
                title: 'Warning',
                text: 'Enter Points  to proceed.'
            });
            return false;
        }
        else {

            //var _status = document.getElementById("chkStatus");

            //if (_status.checked == true) {
            //    _status = "1";
            //}
            //else {
            //    _status = "0";
            //}
            var _status = document.getElementById("chkStatus").checked ? "1" : "0";
            $.ajax({
                type: "POST",
                url: "@Url.Action("SavePoint", "LMSPoint")",
                data: { Section: $("#ddlSection").val().trim(), id: id, Points: $("#txtPoints").val().trim(), ActiveStatus: _status },
                success: function (response) {
                    if (parseInt(response) > 0) {
                        //if (confirm("Point saved successfully.")) {
                        //    $("#PointModal").modal('hide');
                        //    location.reload();
                        //}
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Points saved successfully.'
                        }).then(() => {
                            $("#PointModal").modal('hide');
                            location.reload();
                        });


                    }
                    else if (parseInt(response) == -1)
                       // jAlert('Duplicate Point name cannot be entered. Please enter a unique Point name.')
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Duplicate Point name cannot be entered. Please enter a unique Point name.'
                    });
                }
            });
        }
    }

     function EditClick(ID) {
         $("#hdnID").val(ID);
            $.ajax({
                type: "POST",
                url: "@Url.Action("EditPoint", "LMSPoint")",
                data: { id: ID },
                success: function (response) {
                    if (response.code == "") {
                        jAlert('No data found');
                    }
                    else {
                        $("#ddlSection").val(response.POINTSECTION);
                        $("#txtPoints").val(response.POINTS);
                            if (response.STATUS == "True" )
                            {
                                $("#chkStatus").prop("checked",true);
                            }
                            else
                            {
                                $("#chkStatus").prop("checked",false);
                            }
                            $("#PointModal").modal('show');
                    }
                }
            });
        }

     function DeleteClick(ID) {
            $("#hdnID").val(ID);     


             Swal.fire({
             title: 'Are you sure you want to delete?',
             text: "This action cannot be undone!",
             imageUrl: '/assests/images/delete-big.png', // Custom icon for confirmation
             imageWidth: 50, // Adjust the width as needed
             showCancelButton: true,
             confirmButtonColor: '#3085d6',
             cancelButtonColor: '#d33',
             confirmButtonText: 'Yes, delete it!',
             cancelButtonText: 'Cancel'
         }).then((result) => {
             if (result.isConfirmed) {
                 $.ajax({
                     type: "POST",
                     url: '@Url.Action("Delete", "LMSPoint")',
                     data: { ID: ID },
                     success: function (response) {
                         if (parseInt(response) > 0) {
                             // SweetAlert success message with custom icon
                             Swal.fire({
                                 title: 'Deleted!',
                                 text: 'The record has been deleted successfully.',
                                 /*imageUrl: '/path/to/your/success-icon.png', */
                                 /*imageWidth: 50, */
                                 icon: 'success' // You can also keep the built-in icon type
                             }).then(() => {
                                 location.reload();
                             });
                         } else if (parseInt(response) == -1) {
                             // SweetAlert error message with custom icon
                             Swal.fire({
                                 title: 'Error!',
                                 text: 'Points already mapped with another module. Cannot delete.',
                                 imageUrl: '/path/to/your/error-icon.png', // Custom icon for error
                                 imageWidth: 50, // Adjust the width as needed
                                 icon: 'error' // You can also keep the built-in icon type
                             });
                         }
                     }
                 });
             }
         });
    }

</script>
<div class="breadCumb">
    <span>Point Setup</span>
</div>
<div class="container">
    <div class="form_main backBox p-3">
        <div class="row">
            <div class="col-md-12 buttons-alignment" style="padding-top: 0;margin-bottom: 15px;">
                <div class="add-show-btns">
                    @if (ViewBag.CanAdd)
                    {
                        <button type="button" class="btn add-btn" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" onclick="AddPoint();">
                            <span class="btn-icon"><i class="fa fa-plus"></i></span> Points Add
                        </button>
                    }
                    @if (ViewBag.CanView)
                    {
                        <button type="button" id="btnshow" class="btn show-btn" tabindex=4> <span class="btn-icon"><i class="fa fa-eye" aria-hidden="true"></i></span> Show Data</button>
                    }
                </div>
                @if (ViewBag.CanExport)
                {
                    <button type="button" name="ddlAppIds" id="ddlAppIds" class="btn btn-sm btn-export">
                        <span class="btn-icon"><img src="/assests/images/xlsx.png" /></span>&nbsp; Export to XLSX
                    </button>
                }
            </div>

        </div>
        <div class="clearfix"></div>
        <div class="scrooler">
            <div id="refreshgrid">
                @{
                    Html.RenderAction("PartialGridList", "LMSPoint", new { Is_PageLoad = "0" });
                }
            </div>
        </div>
    </div>
</div>
<div id="PointModal" class="modal pmsModal  fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog" style="width: 500px;">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add/Modify Point</h4>
            </div>
            <div class="modal-body">
                <div id="divModalBody">
                    <div class="row">
                        <div class="col-md-12">
                            <div><label>Section <span class="red">*</span></label></div>
                            <div class="h-branch-select">
                                @Html.DropDownListFor(m => m.Section, new SelectList(Model.SectionList, "SectionId", "SectionName", Model.SectionId), new { @id = "ddlSection", @class = "form-control" })

                            </div>
                        </div>
                        <div class="col-md-12 mt-3">
                            <div><label>Points  <span class="red">*</span></label></div>
                            <div>
                                <input type="number" id="txtPoints" class="form-control" min="1" max="99999" maxlength="99999"/>
                            </div>
                        </div>
                        <div class="col-md-12 mt-3">
                            <div><input type="checkbox" id="chkStatus" class="styled-checkbox" checked /><label>Active</label></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div>
                    <button type="button" class="btn btn-cancel" data-dismiss="modal">Cancel & Exit</button>
                    @if (ViewBag.CanAdd)
                    {
                        <button type="button" id="btnSave" class="btn btn-success" onclick="SavePoint()">Save and Exit</button>
                    }
                </div>

            </div>
        </div>

    </div>
    <input type="hidden" id="hdnID" />
</div>



