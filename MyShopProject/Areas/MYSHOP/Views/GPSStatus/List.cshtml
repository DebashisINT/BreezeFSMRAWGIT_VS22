@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                25-01-2023        2.0.38           Pallab              25576: Report page design modification *@
@*====================================================== Revision History ==========================================================*@

@model Models.GpsStatusClassInput
@{
    ViewBag.Title = "GPS List";


}



<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>

<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />

<script>

    $(function () {

        var d = new Date();


        dtFrom.SetValue(d);
        dtTo.SetValue(d);



        $("#refreshgridstatusgps").hide();

        $("#drpuser").chosen({
            width: "100%"
        })



        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('body').on('click', '#btnshow', function () {
            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");
            var startdate = new Date(Date.parse(newdatefrom));
            //  alert(startdate);
            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");
            var endDate = new Date(Date.parse(newdateTo));

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');

            }
            else
            {
                var start = $('#dtFrom_I').val();
                var end = $('#dtTo_I').val();
                start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));

                if (dayse <= 30) {
                    $("#refreshgridstatusgps").show();
                    gridgpsstatus.Refresh();
                    gridgpsstatus.Refresh();
                }
                else {
                    jAlert("Searching days must be within One month");
                }
            }
        });





        @*$('body').on('click', '#btnshow', function () {


            if ($("#drpuser").val() != '') {

                var surl = '@Url.Action("GetGpsStatusList", "GPSStatus")';
                var usr = $("#drpuser").val();
                var shop = $("#drpshop").val();
                var state = $("#drpstate").val();

                $.ajax({
                    url: surl,
                    async: false,
                    data: {
                        selectedusrid: usr,
                        Fromdate: $('#txtfromDate').val(),
                        Todate: $('#txttoDate').val(),
                        stateid: state,
                        shopId: shop
                    },
                    type: 'POST',

                    success: function (data) {

                        $('#refreshgrid').html(data);

                    },
                    error: function () {
                        // alert('error');
                    },
                });

            }

            else {

                $('#refreshgrid').html('');
                $.jAlert({
                    'title': 'Alert!',
                    'content': 'Select User to show',
                    'theme': 'dark_blue'
                });
            }
        });*@


        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportGpsStatusList", "GPSStatus", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });

    });



    function OnStartCallback(s, e) {
     //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#drpuser").val();
    }


    function OnStartCallbackshop(s, e) {
        //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
    }

    function OnStartCallbackshopgps(s, e) {
        //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
    }


    function OpenSHopVisitList(usrid) {

        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        $("#myModal").modal('show');
        $("#refreshgridstatusgpsshowdetails").show();

        gridgpsstatusshoplist.Refresh();
        gridgpsstatusshoplist.Refresh();

    }

    function OpenGPSVisitList(usrid) {

        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        $("#myModal1").modal('show');
        $("#refreshgridgps").show();

        gridgpsInactive.Refresh();
        gridgpsInactive.Refresh();

    }


</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
    }

    /*Rev 1.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 24px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 34px;
            right: 18px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .whclass.selectH, #ddlShowReport {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/


    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }
    /*Rev end 1.0*/
</style>

<div class="breadCumb">
    <span>GPS Status</span>
</div>

<div class="container">
    <div class="backBox p-3">
        <table class="labelTbl  responsive_Tbl">
            <tr>
                <td style="width:200px;">
                    <h5>Employee : </h5>
                    @*@Html.DropDownListFor(m => m.selectedusrid, new SelectList(Model.userlsit, "UserID", "username", Model.selectedusrid), "-Select-", new { @id = "drpuser", @class = "whclass" })*@

                    <select id="drpuser" name="ddRoles" data-placeholder="Click or Type Here..." class="whclass">

                        <option value="0">All</option>
                        @foreach (var item in Model.userlsit)
                        {
                            if (Model.selectedusrid == item.UserID)
                            {
                                <option value="@item.UserID" selected="selected">@item.username</option>
                            }
                            else
                            {
                                <option value="@item.UserID">@item.username</option>

                            }
                        }
                    </select>

                </td>



                @*Rev 1.0*@
                @*<td id="dt2" style="width:200px">*@
                <td id="dt2" style="width:200px" class="for-cust-icon">
                    @*Rev end 1.0*@
                    <h5>From Date : </h5>
                    @*@Html.TextBoxFor(m => m.Fromdate, new { @class = "form-control", @id = "txtfromDate", @tabindex = 2 })*@

                    @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()
                    @*Rev 1.0*@
                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                    @*Rev end 1.0*@
                </td>

                @*Rev 1.0*@
                @*<td id="dt4" style="width:200px;">*@
                <td id="dt4" style="width:200px" class="for-cust-icon">
                    @*Rev end 1.0*@
                    <h5>To Date : </h5>
                    @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@

                    @Html.DevExpress().DateEditFor(x => x.Todate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()
                    @*Rev 1.0*@
                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                    @*Rev end 1.0*@

                </td>

                @*Rev 1.0*@
                @*<td style="width: 194px;padding-top:23px" colspan="3">*@
                <td style="width: 195px;padding-top:32px" colspan="3">
                    @*Rev end 1.0*@
                    <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>

                    <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                        <option value="0">Export to</option>
                        <option value="1">PDF</option>
                        <option value="2">XLSX</option>
                        <option value="3">XLS</option>
                        <option value="2">RTF</option>
                        <option value="2">CSV</option>
                    </select>
                </td>
            </tr>
        </table>


        <br />
        <div class="clear"></div>
        <div id="refreshgrid">

        </div>

        <div id="refreshgridstatusgps" style="display:none;">

            @{

                Html.RenderAction("GetGpsStatusList", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate, selectedusrid = Model.selectedusrid });

            }


        </div>
    </div>
</div>

<input type="hidden" id="hdnuser_id" />






<div id="myModal" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog modal-lg" style="width:1000px">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Shop Visit List</h4>
            </div>
            <div class="modal-body">
                <div id="divModalBody" style="padding-left:20px;">
                    <div id="refreshgridstatusgpsshowdetails" style="display:none;">

                        @{

                            //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                            Html.RenderAction("ShopListActivityList", "GPSStatus");

                        }



                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<div id="myModal1" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog modal-lg" style="width:1000px">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">GPS Active/Inactive List</h4>
            </div>
            <div class="modal-body">
                <div id="divModalBody" style="padding-left:20px;">
                    <div id="refreshgridgps">

                        @{

                            //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                            Html.RenderAction("GPSListActivityList", "GPSStatus");

                        }



                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
