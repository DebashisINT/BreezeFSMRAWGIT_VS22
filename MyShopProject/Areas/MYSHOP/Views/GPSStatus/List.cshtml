@model Models.GpsStatusClassInput
@{
    ViewBag.Title = "GPS List";


}



<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>

<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />

<script>

    $(function () {

        var d = new Date();


        dtFrom.SetValue(d);
        dtTo.SetValue(d);



        $("#refreshgridstatusgps").hide();

        $("#drpuser").chosen({
            width: "100%"
        })


      
        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('body').on('click', '#btnshow', function () {
            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");
            var startdate = new Date(Date.parse(newdatefrom));
            //  alert(startdate);
            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");
            var endDate = new Date(Date.parse(newdateTo));

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');

            }
            else
            {
                var start = $('#dtFrom_I').val();
                var end = $('#dtTo_I').val();
                start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));

                if (dayse <= 30) {
                    $("#refreshgridstatusgps").show();
                    gridgpsstatus.Refresh();
                    gridgpsstatus.Refresh();
                }
                else {
                    jAlert("Searching days must be within One month");
                }
            }
        });





        @*$('body').on('click', '#btnshow', function () {


            if ($("#drpuser").val() != '') {

                var surl = '@Url.Action("GetGpsStatusList", "GPSStatus")';
                var usr = $("#drpuser").val();
                var shop = $("#drpshop").val();
                var state = $("#drpstate").val();

                $.ajax({
                    url: surl,
                    async: false,
                    data: {
                        selectedusrid: usr,
                        Fromdate: $('#txtfromDate').val(),
                        Todate: $('#txttoDate').val(),
                        stateid: state,
                        shopId: shop
                    },
                    type: 'POST',

                    success: function (data) {

                        $('#refreshgrid').html(data);

                    },
                    error: function () {
                        // alert('error');
                    },
                });

            }

            else {

                $('#refreshgrid').html('');
                $.jAlert({
                    'title': 'Alert!',
                    'content': 'Select User to show',
                    'theme': 'dark_blue'
                });
            }
        });*@


        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportGpsStatusList", "GPSStatus", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });

    });



    function OnStartCallback(s, e) {
     //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#drpuser").val();
    }

    
    function OnStartCallbackshop(s, e) {
        //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
    }

    function OnStartCallbackshopgps(s, e) {
        //   gridgpsstatus.Refresh();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
    }


    function OpenSHopVisitList(usrid) {
       
        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        $("#myModal").modal('show');
        $("#refreshgridstatusgpsshowdetails").show();

        gridgpsstatusshoplist.Refresh();
        gridgpsstatusshoplist.Refresh();
    
    }

    function OpenGPSVisitList(usrid) {

        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        $("#myModal1").modal('show');
        $("#refreshgridgps").show();

        gridgpsInactive.Refresh();
        gridgpsInactive.Refresh();

    }


</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }
    .labelTbl>tbody>tr>td {
        padding-right:20px;
    }
</style>

<div class="breadCumb">
    <span>GPS Status</span>
</div>

<div class="container">
    <div class="backBox p-3">
        <table class="labelTbl  responsive_Tbl">
            <tr>
                <td style="width:200px;">
                    <h5>Employee : </h5>
                    @*@Html.DropDownListFor(m => m.selectedusrid, new SelectList(Model.userlsit, "UserID", "username", Model.selectedusrid), "-Select-", new { @id = "drpuser", @class = "whclass" })*@

                    <select id="drpuser" name="ddRoles" data-placeholder="Click or Type Here..." class="whclass">

                        <option value="0">All</option>
                        @foreach (var item in Model.userlsit)
                        {
                            if (Model.selectedusrid == item.UserID)
                            {
                                <option value="@item.UserID" selected="selected">@item.username</option>
                            }
                            else
                            {
                                <option value="@item.UserID">@item.username</option>

                            }
                        }
                    </select>

                </td>




                <td id="dt2" style="width:200px">
                    <h5>From Date : </h5>
                    @*@Html.TextBoxFor(m => m.Fromdate, new { @class = "form-control", @id = "txtfromDate", @tabindex = 2 })*@

                    @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()

                </td>


                <td id="dt4" style="width:200px;">
                    <h5>To Date : </h5>
                    @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@

                    @Html.DevExpress().DateEditFor(x => x.Todate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()


                </td>


                <td style="width: 194px;padding-top:23px" colspan="3">
                    <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>

                    <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                        <option value="0">Export to</option>
                        <option value="1">PDF</option>
                        <option value="2">XLSX</option>
                        <option value="3">XLS</option>
                        <option value="2">RTF</option>
                        <option value="2">CSV</option>
                    </select>
                </td>
            </tr>
        </table>
    </div>
   
    <br />
    <div class="clear"></div>
    <div id="refreshgrid">

    </div>

    <div id="refreshgridstatusgps" style="display:none;">

        @{

            Html.RenderAction("GetGpsStatusList", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate, selectedusrid = Model.selectedusrid });

        }


    </div>
</div>

    <input type="hidden" id="hdnuser_id" />






    <div id="myModal" class="modal fade" data-backdrop="static" role="dialog">
        <div class="modal-dialog modal-lg" style="width:1000px">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Shop Visit List</h4>
                </div>
                <div class="modal-body">
                    <div id="divModalBody" style="padding-left:20px;">
                        <div id="refreshgridstatusgpsshowdetails" style="display:none;">

                            @{

                                //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                            Html.RenderAction("ShopListActivityList", "GPSStatus");

                            }



                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div id="myModal1" class="modal fade" data-backdrop="static" role="dialog">
        <div class="modal-dialog modal-lg" style="width:1000px">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">GPS Active/Inactive List</h4>
                </div>
                <div class="modal-body">
                    <div id="divModalBody" style="padding-left:20px;">
                        <div id="refreshgridgps">

                            @{

                                //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                                Html.RenderAction("GPSListActivityList", "GPSStatus");

                            }



                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
