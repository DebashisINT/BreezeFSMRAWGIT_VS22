@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                06-02-2023        2.0.39           Pallab              25576: Report page design modification *@
@*====================================================== Revision History ==========================================================*@

@model MyShop.Models.DSPerformanceReport

@{
    ViewBag.Title = "DS Performance";
    /// Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>


<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
<link href="~/Content/media.css" rel="stylesheet" />

<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/pluggins/choosen/choosen.min.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>


<style>
    #BranchGridLookup_CC {
        width: 100%;
    }
</style>
<script>
    var is_pageload = "0";
    $(function () {

      //  gridDSPerformance.Refresh();

        var d = new Date();

        dtFrom.SetValue(d);
        dtTo.SetValue(d);

        var lookup = ASPxClientControl.GetControlCollection().GetByName("BranchGridLookup");
        lookup.GetGridView().Refresh();
        var lookup = ASPxClientControl.GetControlCollection().GetByName("BranchGridLookup");
        lookup.GetGridView().Refresh();



        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            },
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var mindt = new Date(selectedDate.getTime() + 1);
                $("#txttoDate").daterangepicker("option", "minDate", mindt);
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            },
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var maxdt = new Date(selectedDate.getTime() - 1);
                $("#txtfromDate").daterangepicker("option", "maxDate", maxdt);

            }
        });





        $('body').on('click', '#btnshow', function () {

            var flag = true;
            if (dtFrom.GetDate() == null) {
                $('#MandatoryFromDate').attr('style', 'display:block');
                flag = false;
            }
            else {
                $('#MandatoryFromDate').attr('style', 'display:none');
            }

            if (dtTo.GetDate() == null) {
                $('#MandatoryToDate').attr('style', 'display:block');
                flag = false;
            }
            else {
                $('#MandatoryToDate').attr('style', 'display:none');
            }


            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");

            var startdate = new Date(Date.parse(newdatefrom));

            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");

            var endDate = new Date(Date.parse(newdateTo));

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');
            }

            else {
                //$("#refreshgridDSPerformance").show();
                if (flag == true) {
                    is_pageload = "1";

                    var start = $('#dtFrom_I').val();
                    var end = $('#dtTo_I').val();
                    start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                    end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                    var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));
                    //if (dayse <= 7) {
                    //if (dayse <= 30) {
                    //   // gridDSPerformance.Refresh();
                    //}
                    //else {
                    //    //jAlert("Searching days must be within 7 days");
                    //    jAlert("Searching days must be within One month");
                    //}
                    //Mantis Issue 24728
                    if (dayse < 35) {

                    }
                    else {
                        jAlert("Searching days must be within 35 days");
                        flag = false;
                        return false;
                    }
                    //End of Mantis Issue 24728
                }
            }
            if (BranchId == "" || BranchId == null) {
                //  $('#MandatoryState').attr('style', 'display:block');
                jAlert("Please select Branch.");
                flag = false;
                return false;
            }
            else {
                //   $('#MandatoryState').attr('style', 'display:none');
            }
            if ($('#IsEmpDSAll').is(':checked')) {
                //EmployeeDSAllSearch();

            }
            else {
                if ($("#hdnEmployeeDSId").val() == null || $("#hdnEmployeeDSId").val() == "") {
                    //Rev Debashis 0024715
                    //jAlert("Please select Employee with designation DS.");
                    jAlert("Please select Employee with designation DS/TL.");
                    //End of Rev Debashis 0024715
                    flag = false;
                    return false;
                }
                else {
                    GetEmpSelectedFieldValuesOndemand($("#hdnEmployeeDSId").val());
                }
            }

            gridDSPerformance.Refresh();


        });



        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExporDSPerformanceList", "DSPerformance", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });


    })

    function BranchStartCallback(s, e) {
        e.customArgs["UserID"] = $("#hdnUserID").val();
    }

    function BranchLookupValChange() {
        BranchGridLookup.GetGridView().Refresh();
    }

    function OnStartCallback(s, e) {

        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["BranchId"] = BranchId;
        e.customArgs["empcode"] = empId;
        e.customArgs["is_pageload"] = is_pageload;

    }

    var BranchId = [];
    //rev Pratik
    var Branch_Id = "";
    //End rev Pratik
    function BranchSelectionChanged(s, e) {
        BranchGridLookup.gridView.GetSelectedFieldValues("BRANCH_ID", GetSelectedFieldValuesCallbackBranch);
    }
    function GetSelectedFieldValuesCallbackBranch(values) {

        try {
            BranchId = [];
            //rev Pratik
            Branch_Id = "";
            //End of rev Pratik
            for (var i = 0; i < values.length; i++) {
                BranchId.push(values[i]);
                //rev Pratik
                Branch_Id += values[i] + ',';
                //End of rev Pratik
            }
        } finally {
            console.log(BranchId);
        }


    }
    //rev Pratik
    function SelectAllGridLookup(s, e) {
        BranchGridLookup.gridView.SelectRows();
        //BranchGridLookup.gridView.GetSelectedFieldValues("BRANCH_ID", GetSelectedFieldValuesCallbackBranch);
        var Hoid = $('#HeadBranch').val();
        BranchId = "";
        BranchGridLookup.SetText("");
        //rev Pratik
        if (Hoid == null || Hoid == "") {
            //Hoid = "0";
            return false;
        }
        else {
            $.ajax({
                type: 'POST',
                url: "/MasterPopulate/GetSelectedChildBranchList",
                data: { "Hoid": Hoid },
                dataType: "json",
                async: false,
                success: function (data) {
                    BranchId = [];
                    Branch_Id = "";
                    $.each(data, function (i, data) {
                        BranchId.push(data.BRANCH_ID);
                        Branch_Id += data.BRANCH_ID + ',';
                    });
                    BranchGridLookup.gridView.SelectRows();
                },
                error: function () {
                    //BranchGridLookup.GetGridView().Refresh();
                }
            });
            //BranchGridLookup.GetGridView().Refresh();
        }

        //End of rev Pratik
    }
    function DeSelectAllGridLookup(s, e) {
        BranchGridLookup.gridView.UnselectRows();

        $('#hdnEmployeeAEId').val('')
        $('#hdnEmployeeWDId').val('')
        $('#hdnEmployeeDSId').val('')
        EmployeeTxt.SetText('')
        EmployeeWDTxt.SetText('')
        EmployeeDSTxt.SetText('')
        //EmpGridLookup.GetGridView().Refresh()
        BranchId = [];
        Branch_Id = "";
        //EmployeeTxt.SetEnabled(false);
        //EmployeeWDTxt.SetEnabled(false);
    }
    //End of rev Pratik
    var empId = [];
    function EmpSelectionChanged(s, e) {
        EmpGridLookup.gridView.GetSelectedFieldValues("empcode", GetEmpSelectedFieldValuesCallback);
    }
    function GetEmpSelectedFieldValuesCallback(values) {
        try {
            empId = [];
            for (var i = 0; i < values.length; i++) {
                empId.push(values[i]);
            }
        } finally {
            console.log(empId);
        }
    }


    function LookupValChange() {
        //EmpGridLookup.GetGridView().Refresh()
        //EmpGridLookup.GetGridView().Refresh()
    }

    function EmpStartCallback(s, e) {
        //e.customArgs["BranchId"] = BranchId;
        //e.customArgs["desgid"] = desigId;
        //e.customArgs["empcode"] = empId;
        //e.customArgs["userId"] = $("#hdnUserID").val();
        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        e.customArgs["BranchId"] = BranchId;
        e.customArgs["empcode"] = empId;
        e.customArgs["is_pageload"] = is_pageload;
    }
    function DateValidateFrom() {
        if (dtTo.GetDate()) {
            if (dtTo.GetDate() < dtFrom.GetDate()) {
                dtTo.SetValue(dtFrom.GetDate());
            }
        }
    }

    function DateValidateTo() {
        if (dtFrom.GetDate()) {
            if (dtTo.GetDate() < dtFrom.GetDate()) {
                dtTo.SetValue(dtFrom.GetDate());
            }
        }
    }

</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #BranchGridLookup_ET > tbody > tr > td:first-child, #DesigGridLookup_ET > tbody > tr > td:first-child, #EmpGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }

    .validclass {
        position: absolute;
        right: 3px;
        top: 32px;
    }

    .inputSpacer {
        padding-top: 24px;
    }

        .inputSpacer input {
            margin-right: 5px;
        }

    .fontLAbel {
        font-weight: 400;
    }

    /*Rev 1.0*/
    /*.selectH {
        height: 28px !important;
        padding: 0px 5px !important;
    }*/
    label {
        margin-top: 5px;
    }
    /*Rev END 1.0*/

    .pmsModal .modal-header {
        background: #298ecc !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
    }

    .pmsModal .modal-content {
        border: none;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    /*Rev 1.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 9px;
        right: 24px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 39px;
            right: 18px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    /*Rev end 1.0*/
</style>

<script>
    function onShowChooserClick(s, e) {
        UpdateCustomizationWindowVisibility();
    }
    var visibleColumn = [];
    function grid_CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();

        for (var i = 0; i <= gridDSPerformance.GetColumnsCount() ; i++) {
            if (gridDSPerformance.GetColumn(i) != null) {
                if (gridDSPerformance.GetColumn(i).visible == false) {
                    console.log(gridDSPerformance.GetColumn(i).fieldName);
                    visibleColumn.push(gridDSPerformance.GetColumn(i).fieldName);
                }
            }
        }

        addPageRetention(visibleColumn);
    }

    function UpdateCustomizationWindowVisibility() {
        if (gridDSPerformance.IsCustomizationWindowVisible())
            gridDSPerformance.HideCustomizationWindow();
        else
            gridDSPerformance.ShowCustomizationWindow();
        UpdateButtonText();
    }

    function UpdateButtonText() {
        var text = gridDSPerformance.IsCustomizationWindowVisible() ? "Hide" : "Show";
        text += " Column Chooser";
        btShowColumnChooser.SetText(text);
    }

    function addPageRetention(visibleColumn) {
        $.ajax({
            url: "@Url.Action("PageRetention", "DSPerformance")",
            async: false,
            data: { Columns: visibleColumn },
            type: 'POST',
            success: function (data) {
                gridDSPerformance.Refresh();
            },
            error: function () {
            },
        });

    }

</script>


<script>
    $(document).ready(function () {
        $('#EmployeeAeModel').on('shown.bs.modal', function () {
            $('#txtEmployeeSearch').focus();
        })
    })
    $(document).ready(function () {
        $('#IsEmpAeAll').prop('checked', true);
        $('#IsEmpWDAll').prop('checked', true);
        $('#IsEmpDSAll').prop('checked', true);
        //rev Pratik
        $('#IsEmpWDAll').prop('disabled', true);
        //End of rev Pratik

        $('#hdnEmployeeAEId').val('')
        $('#hdnEmployeeWDId').val('')
        EmployeeTxt.SetText('')
        EmployeeWDTxt.SetText('')
        EmployeeTxt.SetEnabled(false);
        EmployeeWDTxt.SetEnabled(false);

        $('#hdnEmployeeDSId').val('')
        EmployeeDSTxt.SetText('')
        EmployeeDSTxt.SetEnabled(false);
    })
    var ProdArr = new Array();
    $(document).ready(function () {
        var ProdObj = new Object();
        ProdObj.Name = "EmployeeSource";
        ProdObj.ArraySource = ProdArr;
        arrMultiPopup.push(ProdObj);
    })
    var ProdArrWD = new Array();
    $(document).ready(function () {
        var ProdObjWD = new Object();
        ProdObjWD.Name = "EmployeeWDSource";
        ProdObjWD.ArraySource = ProdArrWD;
        arrMultiPopup.push(ProdObjWD);
    })
    var ProdArrDS = new Array();
    $(document).ready(function () {
        var ProdObjDS = new Object();
        ProdObjDS.Name = "EmployeeDSSource";
        ProdObjDS.ArraySource = ProdArrDS;
        arrMultiPopup.push(ProdObjDS);
    })

    function EmployeeButnClick(s, e) {
        $('#EmployeeAeModel').modal('show');
    }

    function Employee_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#EmployeeAeModel').modal('show');
        }
    }

    function EmployeeAekeydown(e) {
        var OtherDetails = {}
        //rev Pratik
        if (Branch_Id == "" || Branch_Id == null) {
            jAlert("Please select Branch.");
            return false;
        }
        //End of rev Pratik
        if ($.trim($("#txtEmployeeSearch").val()) == "" || $.trim($("#txtEmployeeSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtEmployeeSearch").val();
        OtherDetails.Desig = "AE";
        OtherDetails.ClassID = "";
        OtherDetails.SearchKeyAE = "";
        OtherDetails.SearchKeyWD = "";
        //rev Pratik
        OtherDetails.BranchId = Branch_Id;
        //End of rev Pratik

        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");
            //rev Pratik
            if (BranchId == "" || BranchId == null) {
                jAlert("Please select Branch.");
                return false;
            }
            //End of rev Pratik

            if ($("#txtEmployeeSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetEmployeeListDesigWise", OtherDetails, "EmployeeTable", HeaderCaption, "dPropertyIndex", "SetSelectedValues", "EmployeeSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function EmployeeWDButnClick(s, e) {
        $('#EmployeeWDModel').modal('show');
    }
    function EmployeeWD_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#EmployeeWDModel').modal('show');
        }
    }
    function EmployeeWDkeydown(e) {
        var OtherDetails = {}
        //rev Pratik
        if (Branch_Id == "" || Branch_Id == null) {
            jAlert("Please select Branch.");
            return false;
        }
        //End of rev Pratik
        if ($.trim($("#txtEmployeeWDSearch").val()) == "" || $.trim($("#txtEmployeeWDSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtEmployeeWDSearch").val();
        OtherDetails.Desig = "WD";
        OtherDetails.ClassID = "";
        OtherDetails.SearchKeyAE = $('#hdnEmployeeAEId').val();
        OtherDetails.SearchKeyWD = "";
        //rev Pratik
        OtherDetails.BranchId = Branch_Id;
        //End of rev Pratik


        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");
            //rev Pratik
            if (Branch_Id == "" || Branch_Id == null) {
                jAlert("Please select Branch.");
                return false;
            }
            //End of rev Pratik

            if ($("#txtEmployeeWDSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetEmployeeListDesigWise", OtherDetails, "EmployeeWDTable", HeaderCaption, "dPropertyIndex", "SetSelectedWDValues", "EmployeeWDSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function EmployeeDSButnClick(s, e) {
        $('#EmployeeDSModel').modal('show');
    }
    function EmployeeDS_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#EmployeeDSModel').modal('show');
        }
    }
    function EmployeeDSkeydown(e) {
        var OtherDetails = {}
        //rev Pratik
        if (Branch_Id == "" || Branch_Id == null) {
            jAlert("Please select Branch.");
            return false;
        }
        //End of rev Pratik
        if ($.trim($("#txtEmployeeDSSearch").val()) == null || $.trim($("#txtEmployeeDSSearch").val()) == "") {
            return false;
        }
        OtherDetails.SearchKey = $("#txtEmployeeDSSearch").val();
        OtherDetails.Desig = "DS";
        OtherDetails.ClassID = "";
        OtherDetails.SearchKeyAE = $('#hdnEmployeeAEId').val();
        OtherDetails.SearchKeyWD = $('#hdnEmployeeWDId').val();
        //rev Pratik
        OtherDetails.BranchId = Branch_Id;
        //End of rev Pratik

        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");
            //rev Pratik
            if (Branch_Id == "" || Branch_Id == null) {
                jAlert("Please select Branch.");
                return false;
            }
            //End of rev Pratik

            if ($("#txtEmployeeDSSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetEmployeeListDesigWise", OtherDetails, "EmployeeDSTable", HeaderCaption, "dPropertyIndex", "SetSelectedDSValues", "EmployeeDSSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    //function EmployeeDSAllSearch() {
    //    var OtherDetails = {}


    //    var SearchKey = $("#txtEmployeeDSSearch").val();
    //    var Desig = "DS";

    //    var SearchKeyAE = $('#hdnEmployeeAEId').val();
    //    var SearchKeyWD = $('#hdnEmployeeWDId').val();
    //    //alert($('#hdnEmployeeAEId').val())


    //    var HeaderCaption = [];
    //    HeaderCaption.push("Employee Name");
    //    HeaderCaption.push("Employee Code");

    //    $.ajax({
    //        type: 'GET',
    //        url: "/OutletMaster/GetEmployeeListDesigWise",
    //        data: { "SearchKey": SearchKey, "Desig": Desig, "SearchKeyAE": SearchKeyAE, "SearchKeyWD": SearchKeyWD },
    //        dataType: "json",
    //        async: false,
    //        success: function (data) {

    //            var ctr = '';
    //            $.each(data, function (i, data) {

    //                ctr += data.id + ",";

    //            });
    //            $("#hdnEmployeeDSId").val(ctr);
    //        },

    //    });

    //    GetEmpSelectedFieldValuesOndemand($("#hdnEmployeeDSId").val());

    //}

    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtEmployeeSearch').focus();
        else
            $('#txtEmployeeSearch').focus();
    }
    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtEmployeeWDSearch').focus();
        else
            $('#txtEmployeeWDSearch').focus();
    }
    function SetSelectedValues(Id, Name, ArrName) {
        if (ArrName == 'EmployeeSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeAeModel').modal('hide');
                EmployeeTxt.SetText(Name);
                $('#hdnEmployeeAEId').val(key);
            }
            else {
                EmployeeTxt.SetText('');
                $('#hdnEmployeeAEId').val('');
            }
        }
        if (ArrName == 'EmployeeWDSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeWDModel').modal('hide');
                EmployeeWDTxt.SetText(Name);
                $('#hdnEmployeeWDId').val(key);
            }
            else {
                EmployeeWDTxt.SetText('');
                $('#hdnEmployeeWDId').val('');
            }
        }
        if (ArrName == 'EmployeeDSSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeDSModel').modal('hide');
                EmployeeDSTxt.SetText(Name);
                $('#hdnEmployeeDSId').val(key);
            }
            else {
                EmployeeDSTxt.SetText('');
                $('#hdnEmployeeDSId').val('');
            }
        }
    }
    function SetSelectedWDValues(Id, Name, ArrName) {
        if (ArrName == 'EmployeeWDSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeWDModel').modal('hide');
                EmployeeWDTxt.SetText(Name);
                $('#hdnEmployeeWDId').val(key);
            }
            else {
                EmployeeWDTxt.SetText('');
                $('#hdnEmployeeWDId').val('');
            }
        }
        alert($('#hdnEmployeeWDId').val())
    }
    function SetSelectedDSValues(Id, Name, ArrName) {
        if (ArrName == 'EmployeeDSSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeDSModel').modal('hide');
                EmployeeDSTxt.SetText(Name);
                $('#hdnEmployeeDSId').val(key);
            }
            else {
                EmployeeDSTxt.SetText('');
                $('#hdnEmployeeDSId').val('');
            }
        }
        alert($('#hdnEmployeeDSId').val())
    }

    function GetEmpSelectedFieldValuesOndemand(values) {
        try {
            empId = [];
            var eids = values.split(',');
            for (var i = 0; i < eids.length; i++) {
                empId.push(eids[i]);
            }
        } finally {
            console.log(empId);
        }
    }
    //$(document).ready(function () {
    //    alert("ready")
    //    BindBranches();
    //})
    function BindBranches() {
        var Hoid = $('#HeadBranch').val();
        BranchId = "";
        BranchGridLookup.SetText("");
        //rev Pratik
        if (Hoid == null || Hoid == "") {
            //Hoid = "0";
            return false;
        }
        else {
            $.ajax({
                type: 'POST',
                url: "/MasterPopulate/GetChildBranchList",
                data: { "Hoid": Hoid },
                dataType: "json",
                async: false,
                success: function (data) {
                    //result = data;
                    //BranchGridLookup.GetGridView().Refresh();
                },
                error: function () {
                    //BranchGridLookup.GetGridView().Refresh();
                }
            });
            BranchGridLookup.GetGridView().Refresh();
        }

        //End of rev Pratik
    }
    function CheckEmployeeAESelection() {
        if ($('#IsEmpAeAll').prop('checked')) {
            $('#hdnEmployeeAEId').val('')
            $('#hdnEmployeeWDId').val('')
            EmployeeTxt.SetText('')
            EmployeeWDTxt.SetText('')
            EmployeeTxt.SetEnabled(false);
            EmployeeWDTxt.SetEnabled(false);
            $('#IsEmpWDAll').prop('checked', true);

            $('#hdnEmployeeDSId').val('')
            EmployeeDSTxt.SetText('')
            EmployeeDSTxt.SetEnabled(false);
            $('#IsEmpDSAll').prop('checked', true);
            //rev Pratik
            $('#IsEmpWDAll').prop('disabled', true);
            //End of rev Pratik
        } else {
            EmployeeTxt.SetEnabled(true);
            //Rev Pratik
            $('#IsEmpWDAll').prop('disabled', false);
            //End of rev Pratik
        }
    }
    function CheckEmployeeWDSelection() {
        if ($('#IsEmpWDAll').prop('checked')) {
            $('#hdnEmployeeWDId').val('')
            EmployeeWDTxt.SetText('')
            EmployeeWDTxt.SetEnabled(false);
            $('#IsEmpWDAll').prop('checked', true);

            $('#hdnEmployeeDSId').val('')
            EmployeeDSTxt.SetText('')
            EmployeeDSTxt.SetEnabled(false);
            $('#IsEmpDSAll').prop('checked', true);
        } else {
            EmployeeWDTxt.SetEnabled(true);
        }
    }
    function CheckEmployeeDSSelection() {
        $('#hdnEmployeeDSId').val('')
        if ($('#IsEmpDSAll').prop('checked')) {
            $('#hdnEmployeeDSId').val('')
            EmployeeDSTxt.SetText('')
            EmployeeDSTxt.SetEnabled(false);
            $('#IsEmpDSAll').prop('checked', true);
        } else {
            EmployeeDSTxt.SetEnabled(true);
        }
    }
</script>

<link href="~/Content/media.css" rel="stylesheet" />
<div class="breadCumb">
    <span>DS Performance</span>
</div>

<div class="container">
    <div class="backBox px-3 font-pp">
        <div class="">
            <div class="col-md-12">
                <div class="row">
                    <table class="eqpadtbl mt-3 mb-3">
                        <tr>
                            @*Rev 1.0*@
                            @*<td class="w150 relative">*@
                            <td class="w150 relative for-cust-icon">
                                @*Rev end 1.0*@
                                <label>From Date</label>
                                <div>
                                    @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.ShowOutOfRangeWarning = false;
                                    deSettings.Properties.ClientSideEvents.DateChanged = "DateValidateFrom";
                                }).GetHtml()
                                    @*Rev 1.0*@
                                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                    @*Rev end 1.0*@
                                    <span id="MandatoryFromDate" style="display: none" class="validclass">
                                        <img id="img_MandatoryFromDate" class="dxEditors_edtError_PlasticBlue" src="/DXR.axd?r=1_36-tyKfc" title="Mandatory">
                                    </span>
                                </div>
                            </td>
                            @*Rev 1.0*@
                            @*<td class="w150 relative">*@
                            <td class="w150 relative for-cust-icon">
                                @*Rev end 1.0*@
                                <label>To Date</label>
                                <div>
                                    @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@
                                    @Html.DevExpress().DateEditFor(x => x.Todate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.ShowOutOfRangeWarning = false;
                                    deSettings.Properties.ClientSideEvents.DateChanged = "DateValidateTo";

                                }).GetHtml()
                                    @*Rev 1.0*@
                                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                    @*Rev end 1.0*@
                                    <span id="MandatoryToDate" style="display: none" class="validclass">
                                        <img id="img_MandatoryToDate" class="dxEditors_edtError_PlasticBlue" src="/DXR.axd?r=1_36-tyKfc" title="Mandatory">
                                    </span>
                                </div>
                            </td>

                            @*Rev 1.0*@
                            @*<td style="width:150px;">*@
                            <td class="h-branch-select" style="width:150px;">
                                @*Rev end 1.0*@
                                <label>Head Branch : </label>
                                @*@Html.DropDownListFor(m => m.selectedusrid, new SelectList(Model.userlsit, "UserID", "username", Model.selectedusrid), "-Select-", new { @id = "drpuser", @class = "whclass" })*@

                                <select id="HeadBranch" name="HeadBranch" onchange="BindBranches()" data-placeholder="Click or Type Here..." class="whclass selectH">
                                    @*rev Pratik*@
                                    @*Rev Debashis 0025198*@
                                    @*<option value="0">All</option>*@
                                    @*End of Rev Debashis 0025198*@
                                    @*End of rev Pratik*@
                                    @foreach (var item in Model.modelbranch)
                                    {
                                        <option value="@item.BRANCH_ID">@item.CODE</option>
                                    }
                                </select>

                            </td>

                            <td class="w150">
                                <label>Branch </label>
                                <div>
                                    @*rev Pratik*@
                                    @*Rev Debashis 0025198*@
                                    @*@Html.Action("GetChildBranchList", "MasterPopulate", new { Hoid = "0" })*@
                                    @Html.Action("GetChildBranchList", "MasterPopulate", new { Hoid = @ViewBag.h_id })
                                    @*End of Rev Debashis 0025198*@
                                    @*@Html.Action("GetChildBranchList", "MasterPopulate", new { Hoid = @ViewBag.h_id })*@
                                    @*End of rev Pratik*@

                                </div>
                            </td>
                            <td class="w150">
                                <label>Select AE(s)</label>
                                <div>

                                    @Html.DevExpress().ButtonEdit(
                                settings =>
                                {
                                    settings.Name = "EmployeeTxt";

                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Employee_KeyDown(s,e);}";

                                }).GetHtml()

                                </div>
                            </td>
                            <td class="w10 inputSpacer">
                                @*Rev 1.0*@
                                @*<input type="checkbox" id="IsEmpAeAll" name="IsEmpAeAll" onchange="CheckEmployeeAESelection()" value="0"><span class="w140">Select All</span>*@
                                <input class="styled-checkbox" type="checkbox" id="IsEmpAeAll" name="IsEmpAeAll" onchange="CheckEmployeeAESelection()" value="0">
                                <label for="">Select All</label>
                                @*Rev end 1.0*@
                            </td>


                        </tr>
                        <tr>
                            @*Rev 1.0: Select WD(s) part added in 2nd tr*@
                            <td class="w150">
                                <label> Select WD(s)</label>
                                <div>
                                    @*@Html.Action("GetEmpList", "MasterPopulate", new { userId = @Session["userid"].ToString() })*@

                                    @Html.DevExpress().ButtonEdit(
                                settings =>
                                {
                                    settings.Name = "EmployeeWDTxt";

                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeWDButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){EmployeeWD_KeyDown(s,e);}";

                                }).GetHtml()

                                </div>
                            </td>
                            <td class="w10 inputSpacer">
                                @*Rev 1.0*@
                                @*<input type="checkbox" id="IsEmpWDAll" name="IsEmpWDAll" onchange="CheckEmployeeWDSelection()" value="0"><span class="w140">Select All</span>*@
                                <input class="styled-checkbox" type="checkbox" id="IsEmpWDAll" name="IsEmpWDAll" onchange="CheckEmployeeWDSelection()" value="0">
                                <label for="">Select All</label>
                                @*Rev end 1.0*@
                            </td>


                            <td class="w150">
                                @*Rev Debashis 0024715*@
                                @*<label>Select DS(s)</label>*@
                                <label>Select DS/TL(s)</label>
                                @*End of Rev Debashis 0024715*@
                                <div>
                                    @*@Html.Action("GetEmpList", "MasterPopulate", new { userId = @Session["userid"].ToString() })*@

                                    @Html.DevExpress().ButtonEdit(
                                settings =>
                                {
                                    settings.Name = "EmployeeDSTxt";

                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeDSButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){EmployeeDS_KeyDown(s,e);}";

                                }).GetHtml()

                                </div>
                            </td>
                            <td class="w10 inputSpacer">
                                @*Rev 1.0*@
                                @*<input type="checkbox" id="IsEmpDSAll" name="IsEmpDSAll" onchange="CheckEmployeeDSSelection()" value="0"><span>Select All</span>*@
                                <input class="styled-checkbox" type="checkbox" id="IsEmpDSAll" name="IsEmpDSAll" onchange="CheckEmployeeDSSelection()" value="0">
                                <label for="">Select All</label>
                                @*Rev end 1.0*@
                            </td>



                            <td style="padding-top: 22px;width:200px;">
                                <label></label>
                                <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>
                                <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                                    <option value="0">Export to</option>
                                    <option value="1">PDF</option>
                                    <option value="2">XLSX</option>
                                    <option value="3">XLS</option>
                                    <option value="4">RTF</option>
                                    <option value="5">CSV</option>

                                </select>

                            </td>
                            <td></td>
                        </tr>
                    </table>
                </div>

                <div class="">
                    <table class="eqpadtbl mt-1 mb-3"></table>
                </div>
            </div>

            @*separation*@
            @*<div class="col-md-12">

                </div>*@

        </div>
        <input type="hidden" id="hdnuser_id" />
        <input type="hidden" id="hdnuser_state" />
        <input type="hidden" id="hdnuser_shop" />
        <input type="hidden" id="hdnUserID" value="@Session["userid"].ToString()" />
        @*<input type="hidden" id="hdnStateMandatory" value="@ViewBag.StateMandatory" />*@

        <div style="clear: both;"><br /></div>

        <div class="options">
            <div class="options-item">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btShowColumnChooser";
                    settings.Text = "Show Column Chooser";
                    settings.ClientSideEvents.Click = "function (s, e) { onShowChooserClick(s,e); }";
                    // settings.Theme = "MaterialCompactOrange";
                }).GetHtml()
            </div>
        </div>
        <div class="pb-3">
            <div id="refreshgridDSPerformance">
                @{
                    Html.RenderAction("GetDSPerformanceList", "DSPerformance", new { Fromdate = Model.Fromdate, Todate = Model.Todate, BranchId = Model.BranchId, empcode = Model.empcode, is_pageload = "0" });
                }
                @*change for design*@
            </div>
        </div>
    </div>
</div>

<!--Employee Modal -->
<div class="modal fade pmsModal w50" id="EmployeeAeModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Employee(AE) Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="EmployeeAekeydown(event)" id="txtEmployeeSearch" width="100%" placeholder="Search By Employee Name" />
                <div id="EmployeeTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('EmployeeSource')">Deselect All</button>
                <button type="button" id="AePopup" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnEmployeeAEId" runat="server" />

<div class="modal fade pmsModal w50" id="EmployeeWDModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Employee(WD) Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="EmployeeWDkeydown(event)" id="txtEmployeeWDSearch" width="100%" placeholder="Search By Employee Name" />
                <div id="EmployeeWDTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('EmployeeWDSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeWDSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnEmployeeWDId" runat="server" />

<div class="modal fade pmsModal w50" id="EmployeeDSModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                @*Rev Debashis 0024715*@
                @*<h4 class="modal-title">Employee(DS) Search</h4>*@
                <h4 class="modal-title">Employee(DS/TL) Search</h4>
                @*End of Rev Debashis 0024715*@
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="EmployeeDSkeydown(event)" id="txtEmployeeDSSearch" width="100%" placeholder="Search By Employee Name" />
                <div id="EmployeeDSTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('EmployeeDSSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeDSSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnEmployeeDSId" runat="server" />
<!--Employee Modal -->