@model Models.SalesSummaryReport

@{
    ViewBag.Title = "At Work";
    /// Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel-title clearfix">
    <h3 class="pull-left">
        At Work
    </h3>
    <div id="divcross" class="crossBtn"><a href="../DashboardMenu/Dashboard"><i class="fa fa-times"></i></a></div>
</div>


<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>


<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />



<script>

    function getUrlParameter(name) {
        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
        var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
        var results = regex.exec(location.search);
        return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    };

    $(function () {

        // employeeGridLookup.PerformCallback();


        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();
        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();


        //var desiglookup = ASPxClientControl.GetControlCollection().GetByName("DesigGridLookup");
        //desiglookup.GetGridView().Refresh();
        //desiglookup.GetGridView().Refresh();

        //var emplookup = ASPxClientControl.GetControlCollection().GetByName("EmpGridLookup");
        //emplookup.GetGridView().Refresh();
        //emplookup.GetGridView().Refresh();

        // $("#refreshgridstatusreportregister").hide();

        //$("#drpuser").chosen({
        //    width: "100%"
        //})
        //$("#drpstate").chosen({
        //    width: "100%"
        //})
        //$("#drpshop").chosen({
        //    width: "100%"
        //})

        //$('#txtfromDate').daterangepicker({
        //    singleDatePicker: true,
        //    showDropdowns: true,
        //    locale: {
        //        format: 'DD-MM-YYYY'
        //    },
        //    onSelect: function (date) {

        //        var selectedDate = new Date(date);
        //        var mindt = new Date(selectedDate.getTime() + 1);
        //        $("#txttoDate").daterangepicker("option", "minDate", mindt);

        //    }
        //});

        //$('#txttoDate').daterangepicker({
        //    singleDatePicker: true,
        //    showDropdowns: true,
        //    mask: true,
        //    locale: {
        //        format: 'DD-MM-YYYY'
        //    },
        //    onSelect: function (date) {

        //        var selectedDate = new Date(date);
        //        var maxdt = new Date(selectedDate.getTime() - 1);
        //        $("#txtfromDate").daterangepicker("option", "maxDate", maxdt);

        //    }
        //});


        $('body').on('click', '#btnshow', function () {


            $("#refreshgridsalessummary").show();

            gridsalessummaryregister.Refresh();
            gridsalessummaryregister.Refresh();


        });



        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExporSummaryList", "Work_DashboardReport", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });





    })
    function OnStartCallback(s, e) {

        //var StateId = StateGridLookup.gridView.GetSelectedKeysOnPage();
        //var desigId = DesigGridLookup.gridView.GetSelectedKeysOnPage();
        //var empId = EmpGridLookup.gridView.GetSelectedKeysOnPage();

        // alert(StateId);


        e.customArgs["Fromdate"] = $('#txtfromDate').val();
        e.customArgs["Todate"] = txttoDate.GetText();//$('#txttoDate').val();
        e.customArgs["StateId"] = StateId;
        e.customArgs["desgid"] = desigId;
        e.customArgs["empcode"] = empId;
        e.customArgs["is_pageload"] = "1";

        // alert(e.customArgs["StateId"]);

    }

    var StateId = [];
    function StateSelectionChanged(s, e) {
        StateGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {

        try {
            StateId = [];
            for (var i = 0; i < values.length; i++) {
                StateId.push(values[i]);
            }
        } finally {
            console.log(StateId);
        }


    }

    var desigId = [];
    function DesigSelectionChanged(s, e) {
        DesigGridLookup.gridView.GetSelectedFieldValues("desgid", GetDesigSelectedFieldValuesCallback);
    }
    function GetDesigSelectedFieldValuesCallback(values) {
        try {
            desigId = [];
            for (var i = 0; i < values.length; i++) {
                desigId.push(values[i]);
            }
        } finally {
            console.log(desigId);
        }
    }

    var empId = [];
    function EmpSelectionChanged(s, e) {
        EmpGridLookup.gridView.GetSelectedFieldValues("empcode", GetEmpSelectedFieldValuesCallback);
    }
    function GetEmpSelectedFieldValuesCallback(values) {
        try {
            empId = [];
            for (var i = 0; i < values.length; i++) {
                empId.push(values[i]);
            }
        } finally {
            console.log(empId);
        }
    }


    function LookupValChange() {
        EmpGridLookup.GetGridView().Refresh()
    }

    function EmpStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
        e.customArgs["desgid"] = desigId;
    }

    $(document).ready(function () {
        txttoDate.SetDate(new Date());

        gridsalessummaryregister.Refresh();
        gridsalessummaryregister.Refresh();
    });
</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #StateGridLookup_ET > tbody > tr > td:first-child, #DesigGridLookup_ET > tbody > tr > td:first-child, #EmpGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }
</style>
<link href="~/Content/media.css" rel="stylesheet" />
<div class="form_main">
    <div class="row">
        <div class="col-md-12">
            <table class="eqpadtbl">
                <tr>
                    <td class="w150" style="display:none;">
                        <label>From Date</label>
                        <div>
                            @Html.TextBoxFor(m => m.Fromdate, new { @class = "form-control", @id = "txtfromDate", @tabindex = 2 })
                        </div>
                    </td>
                    <td class="w150">
                        <label>Report Date</label>
                        <div class="customarrowBtn">
                            @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@
                            @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "txttoDate";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()
                        </div>
                    </td>

                    <td class="w150">
                        <label>State</label>
                        <div>


                            @Html.Action("GetStateList", "Work_DashboardReport")




                            @*<select id="drpstate" name="drpstate" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">
                                    <option value="">All</option>

                                    @foreach (var item in Model.states)
                                    {
                                        if (Model.StateId == item.ID)
                                        {
                                            <option value="@item.ID" selected="selected">@item.StateName</option>
                                        }
                                        else
                                        {
                                            <option value="@item.ID">@item.StateName</option>
                                        }
                                    }

                                </select>*@

                        </div>
                    </td>
                    <td class="w150">
                        <label>Designation</label>
                        <div>

                            @Html.Action("GetDesigList", "Work_DashboardReport")
                            @*<select id="drpdesig" name="ddRoles" data-placeholder="Click or Type Here..." class="whclass">

                                    <option value="">All</option>
                                    @foreach (var item in Model.designation)
                                    {
                                        if (Model.desgid == item.desgid)
                                        {
                                            <option value="@item.desgid" selected="selected">@item.designame</option>
                                        }
                                        else
                                        {
                                            <option value="@item.desgid">@item.designame</option>

                                        }
                                    }
                                </select>*@

                        </div>
                    </td>
                    <td class="w150">
                        <label>Employee</label>
                        <div>
                            @Html.Action("GetEmpList", "Work_DashboardReport")

                            @*<select id="drpemp" name="drpshop" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">
                                    <option value="">All</option>
                                    @foreach (var item in Model.employee)
                                    {
                                        if (Model.empcode == item.empcode)
                                        {
                                            <option value="@item.empcode" selected="selected">@item.empname</option>
                                        }
                                        else
                                        {
                                            <option value="@item.empcode">@item.empname</option>
                                        }
                                    }
                                </select>*@

                        </div>
                    </td>

                    <td style="padding-top: 22px;width:170px;">
                        <label></label>
                        <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>
                        <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                            <option value="0">Export to</option>

                            <option value="2">XLSX</option>

                        </select>

                    </td>
                </tr>
            </table>
            <div>


                <div class="clear"></div>
                <div id="refreshgrid">

                </div>

                <div id="refreshgridsalessummary">

                    @{
                        Html.RenderAction("GetSalesSummaryList", "Work_DashboardReport", new { Fromdate = Model.Fromdate, Todate = Model.Todate, StateId = Model.StateId, desgid = Model.desgid, empcode = Model.empcode, is_pageload = "0" });
    // Html.RenderAction("GetSalesSummaryList", "Work_DashboardReport");

                    }
                    @*change for design*@

                </div>


                <input type="hidden" id="hdnuser_id" />
                <input type="hidden" id="hdnuser_state" />
                <input type="hidden" id="hdnuser_shop" />


            </div>
        </div>
    </div>
