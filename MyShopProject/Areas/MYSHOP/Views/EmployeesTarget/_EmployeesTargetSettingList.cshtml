@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                10-02-2023        2.0.39           Pallab              25656 : Master module design modification *@
@*====================================================== Revision History ==========================================================*@

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gridEmployeesTargetList";

    settings.CallbackRouteValues = new { Action = "GetEmployeesTargetList", Controller = "EmployeesTarget" };
    settings.ClientSideEvents.BeginCallback = "OnStartCallback";

    settings.ClientSideEvents.EndCallback = "OnEndCallback";
    settings.KeyFieldName = "EmployeeCode";
    settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "EmployeesTarget", Action = "BatchEditingUpdateEmployeesTarget" };

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Height = System.Web.UI.WebControls.Unit.Pixel(480);
    settings.Settings.VerticalScrollableHeight = 230;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
    settings.SettingsContextMenu.FooterMenuItemVisibility.SummaryCount = true;
    settings.SettingsSearchPanel.Visible = true;
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowGroupPanel = true;
    settings.SettingsContextMenu.EnableColumnMenu = DefaultBoolean.True;

    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;
    settings.CommandColumn.Visible = false;

    settings.Settings.ShowFooter = true;
    settings.SettingsContextMenu.EnableFooterMenu = DefaultBoolean.True;

    settings.ClientSideEvents.RowClick = "grdrowclick";

    //settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "30", "40", "50" };
    settings.SettingsPager.PageSizeItemSettings.Visible = false;
    //settings.SettingsPager.PageSize = 1;
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
    settings.Settings.ShowFilterRowMenu = true;

    //settings.ClientSideEvents.RowClick = "batchupdatestarting";

    settings.Columns.Add(x =>
    {
        x.FieldName = "ContactNo";
        x.Caption = "Login ID";
        x.VisibleIndex = 1;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(120);
        x.EditFormSettings.Visible = DefaultBoolean.False;

        x.FixedStyle = GridViewColumnFixedStyle.Left;
    });

    //settings.Columns.Add(x =>
    //{
    //    x.FieldName = "EmployeeCode";
    //    x.Caption = "EMP CODE";
    //    x.VisibleIndex = 2;
    //    x.Width = System.Web.UI.WebControls.Unit.Percentage(14);
    //    x.EditFormSettings.Visible = DefaultBoolean.False;
    //    x.EditFormSettings.Caption = "Name";
    //});

    settings.Columns.Add(x =>
    {
        x.FieldName = "Employeename";
        x.Caption = "Employee Name";
        x.VisibleIndex = 2;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(200);
        x.EditFormSettings.Visible = DefaultBoolean.False;

        x.FixedStyle = GridViewColumnFixedStyle.Left;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Designation";
        x.Caption = "Designation";
        x.VisibleIndex = 3;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(160);
        x.EditFormSettings.Visible = DefaultBoolean.False;

        x.FixedStyle = GridViewColumnFixedStyle.Left;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "EmpTypeName";
        x.Caption = "Target Type";
        x.VisibleIndex = 4;
        //Rev 1.0
        //x.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        x.Width = System.Web.UI.WebControls.Unit.Pixel(100);
        //Rev end 1.0
        x.EditFormSettings.Visible = DefaultBoolean.False;

        x.FixedStyle = GridViewColumnFixedStyle.Left;
        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "stage";
        x.Caption = "Stage";
        x.VisibleIndex = 5;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(120);
        x.ColumnType = MVCxGridViewColumnType.TextBox;
        x.EditFormSettings.Visible = DefaultBoolean.False;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "CounterTypeName";
        x.Caption = "Customer Type";
        x.VisibleIndex = 6;
        //Rev 1.0
        //x.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        x.Width = System.Web.UI.WebControls.Unit.Pixel(120);
        //Rev end 1.0
        x.EditFormSettings.Visible = DefaultBoolean.False;

        x.FixedStyle = GridViewColumnFixedStyle.Left;

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    });





    settings.Columns.Add(x =>
    {
        x.FieldName = "NewCounter";
        x.Caption = "New Customer";
        x.VisibleIndex = 7;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        x.ColumnType = MVCxGridViewColumnType.TextBox;
        x.EditFormSettings.Visible = DefaultBoolean.True;
        (x.PropertiesEdit as DevExpress.Web.TextBoxProperties).MaskSettings.Mask = "<0..99999>";

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
    });



    settings.Columns.Add(x =>
    {
        x.FieldName = "Revisit";
        x.Caption = "Re-visit";
        x.VisibleIndex = 8;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        x.ColumnType = MVCxGridViewColumnType.TextBox;
        x.EditFormSettings.Visible = DefaultBoolean.True;
        (x.PropertiesEdit as DevExpress.Web.TextBoxProperties).MaskSettings.Mask = "<0..99999>";

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OrderValue";
        x.Caption = "Target Value";
        x.VisibleIndex = 9;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(120);
        x.ColumnType = MVCxGridViewColumnType.TextBox;
        x.EditFormSettings.Visible = DefaultBoolean.True;
        (x.PropertiesEdit as DevExpress.Web.TextBoxProperties).MaskSettings.Mask = "<0..9999999999>";

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Collection";
        x.Caption = "Target Collection";
        x.VisibleIndex = 10;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(120);
        x.ColumnType = MVCxGridViewColumnType.TextBox;
        x.EditFormSettings.Visible = DefaultBoolean.True;
        //var textBoxPropertie = x.PropertiesEdit as DevExpress.Web.TextBoxProperties;
        (x.PropertiesEdit as DevExpress.Web.TextBoxProperties).MaskSettings.Mask = "<0..9999999999>";

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "CreatedDate";
        x.Caption = "Entry Date";
        x.VisibleIndex = 11;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(110);
        x.EditFormSettings.Visible = DefaultBoolean.False;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy";
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "ModifiedDate";
        x.Caption = "Last Modified";
        x.VisibleIndex = 12;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(110);
        x.EditFormSettings.Visible = DefaultBoolean.False;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;

        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy";
    });

    settings.Columns.Add(x =>
    {
        x.Caption = "Target";
        x.VisibleIndex = 13;
        x.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.EditFormSettings.Visible = DefaultBoolean.False;
        // x.Width = System.Web.UI.WebControls.Unit.Percentage(20);
        x.SetDataItemTemplateContent(c =>
        {
            if (Convert.ToInt32(ViewBag.CounterType) == 5 || Convert.ToInt32(ViewBag.CounterType) == 6)
            {
                ViewContext.Writer.Write(
                        "<a style='cursor:pointer' onclick=\"SetEmployeesCounterWiseTarget('" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeCode")) + "','" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeTargetSettingID")) + "','" + ViewBag.CounterType + "',this,'" + c.VisibleIndex + "')\"> <img src='/assests/images/Edit.png' title='Counter wise target distribution' /></a>"
                        + "<a style='cursor:pointer; margin-left: 12px;' onclick=\"RemoveEmployeesCounterWiseTarget('" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeCode")) + "','" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeTargetSettingID")) + "','EmployeesTargetSetting')\"> <img src='/assests/images/delete.png' title='Delete' class='mright8' /> </a>"
                    );
            }
            else
            {
                ViewContext.Writer.Write(
                        "<a style='cursor:pointer; opacity: .8;'> <img src='/assests/images/Edit.png' title='Not applicable' /></a>"
                        + "<a style='cursor:pointer; margin-left: 12px;' onclick=\"RemoveEmployeesCounterWiseTarget('" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeCode")) + "','" + Convert.ToString(DataBinder.Eval(c.DataItem, "EmployeeTargetSettingID")) + "','EmployeesTargetSetting')\"> <img src='/assests/images/delete.png' title='Delete' class='mright8' /> </a>"
                    );
            }
        });
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "user_id";
        x.Caption = "";
        x.VisibleIndex = 0;
        x.Visible = false;
    });

    settings.CustomJSProperties = (s, e) =>
    {
        if (ViewData["BatchUpdate"] != null)
        {
            e.Properties["cpBatchUpdate"] = "1";
        }
        else
        {
            e.Properties["cpBatchUpdate"] = "0";
        }
    };

    settings.ClientSideEvents.BatchEditConfirmShowing = "function(s, e) { if(firsttime>0){ e.cancel = true;} else{ e.cancel = false; firsttime++;}}";

    settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Collection").DisplayFormat = "Total: {0}";

    settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "OrderValue").DisplayFormat = "Total: {0}";

}).Bind(Model).GetHtml()

<input type="hidden" value="@Model.Count" id="hdnExportGridListCount" />

<input type="hidden" value="@ViewBag.Success" id="hdnExportGridListMessage" />



