@*====================================================== Revision History ==========================================================*@
@*Rev Number    DATE            VERSION    DEVELOPER      CHANGES*@
@*1.0           10-02-2023      2.0.39     Pallab         25656 : Master module design modification *@
@*2.0           04-05-2023      V2.0.40    Sanchita       A New Expense Report is Required for BP Poddar. Refer: 25833 *@
@*3.0           19-05-2023      V2.0.40    Priti          0026145:Modification in the ‘Configure Travelling Allowance’ page. *@

@*====================================================== Revision History ==========================================================*@

@model  MyShop.Models.TravelConveyanceModelclass

@{
    ViewBag.Title = "Configure Travelling Allowance ";
}


@*<link href="~/Content/media.css" rel="stylesheet" />*@
<style>
    .dxgvTable_PlasticBlue, .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        overflow: initial !important;
    }

    .pad-md-18 {
        padding-top: 18px;
    }
</style>

<script>

    // Rev 2.0
    $(document).ready(function () {
        if (@ViewBag.isExpenseFeatureAvailable == "1") {
            $("#divMOTHide").hide();
            $("#divFTHide").hide();
            $("#divEDHide").hide();
            $("#divERHide").hide();
            /*$("#forTopSpaceControl").removeClass("mt-4");*/
        }

        //Rev 3.0
         if ('@ViewBag.IsShowReimbursementTypeInAttendance' == "1") {
             $("#DivBranch").removeClass("hidden");
             $("#DivArea").removeClass("hidden");
             
        }
        else {
             $("#DivBranch").addClass("hidden");
             $("#DivArea").addClass("hidden");
        }
         //Rev 3.0 End

    });
    // End of Rev 2.0

    function isNumber(txt, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 46) {
            //Check if the text already contains the . character
            if (txt.value.indexOf('.') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31
                 && (charCode < 48 || charCode > 57))
                return false;
        }
        return true;
    }

    $(function () {
        $("#spaneligible").hide();
        $("#spanrate").hide();
        $("#spandistance").hide();



        $("#txtdistance").val('0.00');
        $("#txtRate").val('0.00');
        $("#txteligibleamount").val('0.00');
        $("#btnEdit").hide();
        $("#btnshow").show();

        $('body').on('click', '#btnclear', function () {
            $("#btnEdit").hide();
            $("#btnshow").show();
            $("#idvisitloc").val('');
            $("#idempgrade").val('');
            $("#idexpense").val('');
            $("#iddesignation").val('');
            $("#idtravelmode").val('');
            $("#idstate").val('');
            $("#txtdistance").val('0');
            $("#txtRate").val('0');
            $("#txteligibleamount").val('0');
            $('#idfuel').val('');
            $("#hdTCid_id").val('');
            $("#chkIsactive").prop('checked', false);

            empgradeGridLookup.gridView.UnselectAllRowsOnPage();
            StateGridLookup.gridView.UnselectAllRowsOnPage();
            empgradeGridLookup.SetEnabled(true);
            StateGridLookup.SetEnabled(true);

        });



        $('body').on('click', '#btnshow', function () {

            if ($("#txteligibleamount").val() == '') {
                $("#txteligibleamount").val('0');

            }
            var f = true;
            if ($("#idvisitloc").val() == '') {
                f = false;

            }
            if ($("#idempgrade").val() == '') {
                f = false;

            }
            if ($("#idexpense").val() == '') {
                f = false;

            }

            // Rev 2.0
            if (@ViewBag.isExpenseFeatureAvailable == "0") {
            // End of Rev 2.0
                if ($("#iddesignation").val() == '') {
                    f = false;

                }
                if ($("#idtravelmode").val() == '' && $("#idexpense").val() == 1) {
                    f = false;

                }
            // Rev 2.0
            }
            // End of Rev 2.0

            if ($("#idstate").val() == '') {
                f = false;

            }
            if (parseInt($("#txteligibleamount").val()) == "0" || $("#txteligibleamount").val() == '') {
                if ((parseInt($("#txtdistance").val()) == "0" || $("#txtdistance").val() == '') || (parseInt($("#txtRate").val()) == "0" || $("#txtRate").val() == '') && $("#idexpense").val() == 1) {
                    f = false;
                }
            }
            if ((parseInt($("#txteligibleamount").val()) == "0" || $("#txteligibleamount").val() == '') && $("#idexpense").val() != 1) {
                f = false;

            }
            if ($("#idexpense").val() == 1) {
                $("#spaneligible").hide();
            }
            if ($("#idexpense").val() != 1) {
                $("#spaneligible").show();
            }

            if (f == true) {
                var surl = '@Url.Action("ConfigurationInsert", "TravelConveyance")';
                $.ajax({
                    url: surl,
                    data: {

                        VisitlocId: $("#idvisitloc").val(),
                        StateId: StateId,
                        EmpgradeId: EmpgradeId,
                        ExpenseId: $("#idexpense").val(),
                        DesignationId: $("#iddesignation").val(),
                        TravelId: $('#idtravelmode option:selected').val().split(",")[0],
                        EligibleDistance: $("#txtdistance").val(),
                        EligibleRate: $("#txtRate").val(),
                        EligibleAmtday: $("#txteligibleamount").val(),
                        IsActive: $("#chkIsactive").is(':checked'),
                        fuelID: $('#idfuel').val(),

                        //Rev  3.0
                        BranchId:BranchId,
                        AreaId:AreaId
                        //Rev  3.0 End
                    },
                    type: 'POST',

                    success: function (data) {
                        if (data == "Success") {
                            $("#btnEdit").hide();
                            $("#btnshow").show();
                            $("#idvisitloc").val('');
                            $("#idempgrade").val('');
                            $("#idexpense").val('');
                            $('#idfuel').val('');
                            $("#iddesignation").val('');
                            $("#idtravelmode").val('');
                            $("#idstate").val('');
                            $("#txtdistance").val('0');
                            $("#txtRate").val('0');
                            $("#txteligibleamount").val('0');
                            $("#hdTCid_id").val('');
                            $("#chkIsactive").prop('checked', false);
                            gridTaconfiguration.Refresh();
                            gridTaconfiguration.Refresh();

                            empgradeGridLookup.gridView.UnselectAllRowsOnPage();
                            StateGridLookup.gridView.UnselectAllRowsOnPage();
                            empgradeGridLookup.SetEnabled(true);
                            StateGridLookup.SetEnabled(true);
                        }
                        else {
                            jAlert('Already data was inserted against same Grade,Designation,State,Visit location,Travel mode.');
                        }
                    },
                    error: function () {
                    },
                });
            }
            else {
                jAlert('Mandatory fields/Value required.');
            }
        });
        $('body').on('click', '#btnEdit', function () {

            var f = true;
            if ($("#idvisitloc").val() == '') {
                f = false;
            }
            if ($("#idempgrade").val() == '') {
                f = false;
            }
            if ($("#idexpense").val() == '') {
                f = false;
            }

            // Rev 2.0
            if (@ViewBag.isExpenseFeatureAvailable == "0") {
            // End of Rev 2.0
                if ($("#iddesignation").val() == '') {
                    f = false;

                }
                if ($("#idtravelmode").val() == '' && $("#idexpense").val() == 1) {
                    f = false;

                }
            // Rev 2.0
            }
            // End of Rev 2.0

            if ($("#idstate").val() == '') {
                f = false;

            }

            //  alert(($("#txtdistance").val()) + ' ' + parseInt($("#txtRate").val()) + ' ' + parseInt($("#txteligibleamount").val()));

            if (parseInt($("#txteligibleamount").val()) == "0" || $("#txteligibleamount").val() == '') {
                if ((parseInt($("#txtdistance").val()) == "0" || $("#txtdistance").val() == '') || (parseInt($("#txtRate").val()) == "0" || $("#txtRate").val() == '') && $("#idexpense").val() == 1) {
                    f = false;

                }
            }
            if ((parseInt($("#txteligibleamount").val()) == "0" || $("#txteligibleamount").val() == '') && $("#idexpense").val() != 1) {
                f = false;
            }
            if ($("#idexpense").val() == 1) {
                $("#spaneligible").hide();
            }
            if ($("#idexpense").val() != 1) {
                $("#spaneligible").show();
            }
            if (f == true) {
                var surl = '@Url.Action("ConfigurationUpdate", "TravelConveyance")';
                $.ajax({
                    url: surl,
                    async: false,
                    data: {

                        VisitlocId: $("#idvisitloc").val(),
                       EmpgradeId: $("#idempgrade").val(),
                        EmpgradeId: EmpgradeId,
                        ExpenseId: $("#idexpense").val(),
                        DesignationId: $("#iddesignation").val(),
                        TravelId: $('#idtravelmode option:selected').val().split(",")[0],
                        StateId: $("#idstate").val(),

                        EligibleDistance: $("#txtdistance").val(),
                        EligibleRate: $("#txtRate").val(),
                        EligibleAmtday: $("#txteligibleamount").val(),
                        IsActive: $("#chkIsactive").is(':checked'),
                        TCId: $("#hdTCid_id").val(),
                        fuelID: $('#idfuel').val()
                    },
                    type: 'POST',

                    success: function (data) {
                        // alert(data);
                        if (data == "Success") {
                            $("#btnEdit").hide();
                            $("#btnshow").show();
                            $("#idvisitloc").val('');
                            $("#idempgrade").val('');
                            $('#idfuel').val('');
                            $("#idexpense").val('');
                            $("#iddesignation").val('');
                            $("#idtravelmode").val('');
                            $("#idstate").val('');
                            $("#txtdistance").val('0');
                            $("#txtRate").val('0');
                            $("#txteligibleamount").val('0');
                            $("#hdTCid_id").val('');
                            $("#chkIsactive").prop('checked', false);
                            gridTaconfiguration.Refresh();
                            gridTaconfiguration.Refresh();


                            empgradeGridLookup.gridView.UnselectAllRowsOnPage();
                            StateGridLookup.gridView.UnselectAllRowsOnPage();
                            empgradeGridLookup.SetEnabled(true);
                            StateGridLookup.SetEnabled(true);
                        }
                        else {
                            jAlert('Already data was inserted against same Grade,Designation,State,Visit location,Travel mode.');
                        }
                    },
                    error: function () {

                    },


                });
            }
            else {
                jAlert('Mandatory fields/Value required.');
                //$.jAlert({
                //    'title': 'Alert!',
                //    'content': 'Mandatory fields required',
                //    'theme': 'dark_blue'
                //});
            }

        });


        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportConveyance", "TravelConveyance", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });
    })
    function EditConveyance(Tsid) {
        $("#btnshow").hide();
        $("#btnEdit").show();
      //empgradeGridLookup.SetValue(null);

        empgradeGridLookup.gridView.UnselectAllRowsOnPage();
        StateGridLookup.gridView.UnselectAllRowsOnPage();



        var surl = '@Url.Action("EditConveyance", "TravelConveyance")';
        $.ajax({
            async:false,
            url: surl,
            data: {

                Tsid: Tsid

            },
            type: 'POST',

            success: function (dataconvence) {

                //  alert(dataconvence.EligibleAmtday);
                var s = dataconvence.TravelId + ',' + dataconvence.fueladjust;
                // alert(s);
                $("#idvisitloc").val(dataconvence.VisitlocId);
                $("#idempgrade").val(dataconvence.EmpgradeId);
                $("#idexpense").val(dataconvence.ExpenseId);
                $("#iddesignation").val(dataconvence.DesignationId);
                $("#idstate").val(dataconvence.StateId);
                $("#hdTCid_id").val(dataconvence.TCId);
                $("#chkIsactive").prop('checked', dataconvence.IsActive);
                Func_Travelmode();
                if (dataconvence.TravelId != "0") {
                    $("#idtravelmode").val(s);
                    Func_FuelBind();
                }
                $('#idfuel').val(dataconvence.fuelID);
                $("#txtdistance").val(dataconvence.EligibleDistance);
                $("#txtRate").val(dataconvence.EligibleRate);
                $("#txteligibleamount").val(dataconvence.EligibleAmtday);
               //  alert(dataconvence.StateIdfetch);



                setTimeout(function () {
                    empgradeGridLookup.SetValue(dataconvence.EmpgradeIdfetch);
                    setTimeout(function () { StateGridLookup.SetValue(dataconvence.StateIdfetch); }, 200);
                }, 100);

                //empgradeGridLookup.SetValue(dataconvence.EmpgradeIdfetch);
                //StateGridLookup.SetValue(dataconvence.StateIdfetch);
                 //Rev 3.0
                StateId = dataconvence.StateId;
                
                 //Rev 3.0 End
            },
            error: function () {

            },


        });
        empgradeGridLookup.SetEnabled(false);
        StateGridLookup.SetEnabled(false);

        //Rev 3.0
        AreaGridLookup.SetEnabled(false);
        BranchGridLookup.SetEnabled(false);
        //Rev 3.0 End
    }
    function DeleteTConveyance(Tsid) {

        jConfirm('Confirm delete?', 'Confirmation Dialog', function (r) {
            if (r == true) {
                var surl = '@Url.Action("DeleteConveyance", "TravelConveyance")';
                $.ajax({

                    url: surl,
                    async: false,
                    data: {

                        Tsid: Tsid

                    },
                    type: 'POST',

                    success: function (data) {
                        $.jAlert({
                            'title': 'Alert!',
                            'content': 'Deleted Successfully',
                            'theme': 'dark_blue'
                        });
                        gridTaconfiguration.Refresh();
                        gridTaconfiguration.Refresh();
                    },
                    error: function () {

                    },

                });
            }
            else {
                return false;
            }

        });
    }
    function Func_Travelmode() {
        $("#txtdistance").val('0.00');
        $("#txtRate").val('0.00');
        $("#txteligibleamount").val('0.00');
        //alert($("#idexpense").val());



        var fueltypess = "<select id='idtravelmode' class=form-control>";
        fueltypess = fueltypess + '<option value="0">N.A</option>';
        fueltypess = fueltypess + '</select>';
        $('#divtravel').html(fueltypess);





        if ($("#idexpense").val() != 1) {

            $("#txtRate").prop('disabled', true);
            $("#txtdistance").prop('disabled', true);
            $("#spaneligible").show();



            $("#idtravelmode").prop('disabled', true);
            $("#idfuel").prop('disabled', true);
            $("select#divtravel").prop('selectedIndex', 0);


            var fueltypess = "<select id='idfuel' class=form-control >";
            fueltypess = fueltypess + '<option value="0">N.A</option>';
            fueltypess = fueltypess + '</select>';
            $('#divfuelType').html(fueltypess);

        }
        else {

            $("#txtRate").prop('disabled', false);
            $("#txtdistance").prop('disabled', false);

            $("#idtravelmode").prop('disabled', false);
            $("#idfuel").prop('disabled', false);

            $("#spaneligible").hide();
        }
        var surl = '@Url.Action("GetTravelMode", "TravelConveyance")';
        $.ajax({
            url: surl,
            async: false,
            data: {

                ExpenseId: $("#idexpense").val()

            },
            type: 'POST',

            success: function (data) {
                // alert(data);
                //if (data == "Success") {

                var travelmodes = "<select id='idtravelmode' class=form-control onchange=Func_FuelBind() >";

                travelmodes = travelmodes + '<option value="">Select</option>';
                for (var i = 0; i < data.length; i++) {

                    // alert(data[i].fueladjust);
                    travelmodes = travelmodes + '<option value=' + data[i].ID + ',' + data[i].fueladjust + '  >' + data[i].Name + '</option>';
                    //    alert(travelmodes);
                }
                travelmodes = travelmodes + '</select>';
                $('#divtravel').html(travelmodes);

                //}
                //else {

                //    $.jAlert({
                //        'title': 'Alert!',
                //        'content': 'Please enter all required fields/Email Should be correct',
                //        'theme': 'dark_blue'
                //    });
                //}
            },
            error: function () {

            },


        });


       if ($("#idexpense").val() != 1) {
         $("select#divtravel").prop('selectedIndex', 0);
         $("select#divfuelType").prop('selectedIndex', 0);
      }

    }
    function Func_FuelBind() {


        var s = [];
        s = $('#idtravelmode option:selected').val();

        var type = s.split(",")[1];
        var val = s.split(",")[0];

        if (type == 'true') {


            var surl = '@Url.Action("GetFuelMode", "TravelConveyance")';
            $.ajax({
                url: surl,
                async: false,
                data: {

                    ModeiD: val

                },
                type: 'POST',

                success: function (data) {
                    // alert(data);
                    //if (data == "Success") {

                    var fueltypess = "<select id='idfuel' class=form-control>";

                    fueltypess = fueltypess + '<option value="">Select</option>';
                    for (var i = 0; i < data.length; i++) {
                        fueltypess = fueltypess + '<option value=' + data[i].Value + ' >' + data[i].Text + '</option>';
                    }
                    fueltypess = fueltypess + '</select>';
                    $('#divfuelType').html(fueltypess);

                },
                error: function () {

                },


            });
        }

        else {
            var fueltypess = "<select id='idfuel' class=form-control>";
            fueltypess = fueltypess + '<option value="0">N.A</option>';
            fueltypess = fueltypess + '</select>';
            $('#divfuelType').html(fueltypess);
        }
    }
    var StateId = [];
    function StateSelectionChanged(s, e) {
        StateGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {

        try {
            StateId = [];
            for (var i = 0; i < values.length; i++) {
                StateId.push(values[i]);
            }
        } finally {
            //console.log(StateId);
        }

        BranchId = [];
        BranchGridLookup.SetValue("");

    }
    //Rev 3.0
    var BranchId = [];
    function BranchSelectionChanged(s, e) {
        BranchGridLookup.gridView.GetSelectedFieldValues("BRANCH_ID", GetBranchSelectedFieldValuesCallback);
    }
    function GetBranchSelectedFieldValuesCallback(values) {
        try {
            BranchId = [];
            for (var i = 0; i < values.length; i++) {
                BranchId.push(values[i]);
            }
        } finally {
            //console.log(BranchId);
        }
        AreaId = [];
        AreaGridLookup.SetValue("");
    }
    function LookupAreaValChange(s, e) {
        AreaGridLookup.GetGridView().Refresh();
    }
    function AreaStartCallback(s, e) {
        e.customArgs["BranchId"] = BranchId;
    }
    function BranchStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
    }
    function BranchLookupValChange(s, e) {
        BranchGridLookup.GetGridView().Refresh();
    }


    var AreaId = [];
    function AreaSelectionChanged(s, e) {
        AreaGridLookup.gridView.GetSelectedFieldValues("AreaID", GetAreaSelectedFieldValuesCallback);
    }
    function GetAreaSelectedFieldValuesCallback(values) {
        try {
            AreaId = [];
            for (var i = 0; i < values.length; i++) {
                AreaId.push(values[i]);
            }
        } finally {
            //console.log(AreaId);
        }
    }
     //Rev 3.0 End





    var EmpgradeId = [];
    function GradeSelectionChanged(s, e) {
        empgradeGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallbackforgrade);
    }


    function GetSelectedFieldValuesCallbackforgrade(values) {

        try {
            EmpgradeId = [];
            for (var i = 0; i < values.length; i++) {
                EmpgradeId.push(values[i]);
            }
        } finally {
            console.log(EmpgradeId);
        }

    }

</script>
<style>
    select.full {
        width: 100% !important;
    }

    /*Rev 1.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 33px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    /*Rev end 1.0*/
    @@media only screen and (max-width: 768px) {

        .breadCumb > span {
            padding: 9px 12px;
        }

        .breadCumb {
            padding: 0 10%;
        }

        #refreshgridsalessummary {
            overflow-x: auto;
        }
    }
</style>
<div class="breadCumb">
    <span>Configure Travelling Allowance </span>
</div>
<div class="container">
    <div class="backBox p-3">
        <div class="row">
            @*Rev 1.0*@
            @*<div class="col-md-2">*@
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-2 h-branch-select mb-3">
                @*Rev end 1.0*@
                <label>Visit Location</label><span class="red">*</span>
                <div>
                    @Html.DropDownListFor(m => m.VisitlocId, new SelectList(Model.visitloc, "ID", "Name", Model.VisitlocId), "Select", new { @id = "idvisitloc", @class = "form-control", @tabindex = 1 })
                </div>
            </div>
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-2 mb-3">
                <label>Emp Grade</label><span class="red">*</span>
                <div>

                    @*@Html.DropDownListFor(m => m.EmpgradeId, new SelectList(Model.empgrade, "ID", "Name", Model.EmpgradeId), "Select", new { @id = "idempgrade", @class = "form-control", @tabindex = 2 })*@

                    @Html.Action("GetEmployeeGradeList", "TravelConveyance")

                </div>
            </div>
            @*Rev 1.0*@
            @*<div class="col-md-2">*@
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-2 h-branch-select mb-3">
                @*Rev end 1.0*@
                <label>Expense Type</label><span class="red">*</span>
                <div>

                    @Html.DropDownListFor(m => m.ExpenseId, new SelectList(Model.expensetype, "ID", "Name", Model.ExpenseId), "Select", new { @id = "idexpense", @class = "form-control", @onchange = "Func_Travelmode()", @tabindex = 3 })
                </div>
            </div>
            @*<div class="col-md-2">
                    <label>Designation</label><span class="red">*</span>
                    <div>

                        @Html.DropDownListFor(m => m.DesignationId, new SelectList(Model.designation, "ID", "Name", Model.DesignationId), "Select", new { @id = "iddesignation", @class = "form-control", @tabindex = 4 })
                    </div>
                </div>*@
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-2 mb-3">
                <label>State</label><span class="red">*</span>
                <div>
                    @*@Html.DropDownListFor(m => m.StateId, new SelectList(Model.state, "ID", "Name", Model.StateId), "Select", new { @id = "idstate", @class = "form-control", @tabindex = 5 })*@

                    @Html.Action("GetStateList", "MasterPopulate")
                </div>
            </div>
            @*Rev 3.0*@
            <div class="col-md-2 mb-3" id="DivBranch">
                <label>Branch</label>
                <div>
                    @{
                        Html.RenderAction("GetBranchList", "MasterPopulate", new { StateId = Model.StateId, is_pageload = "0" });
                    }
                </div>
            </div>
            <div class="col-md-2 mb-3" id="DivArea">
                <label>Area</label>
                <div>
                    @{
                        Html.RenderAction("GetAreaBranchWise", "MasterPopulate", new { BranchId = Model.BranchId, is_pageload = "0" });

                    }
                </div>
            </div>
            @*Rev 3.0 End*@

            @*Rev 1.0*@
            @*<div class="col-md-2">*@
            @*Rev 2.0 [id="divHide" and "mb-3" class added] *@
            <div class="col-md-2 h-branch-select mb-3" id="divMOTHide">
                @*Rev end 1.0*@
                <label>Mode Of Travel</label><span class="red">*</span>
                <div id="divtravel">

                    @Html.DropDownListFor(m => m.TravelId, new SelectList(Model.travelmode, "ID", "Name", Model.TravelId), "N.A", new { @id = "idtravelmode", @class = "form-control", @tabindex = 6 })

                </div>
            </div>

            @*Rev 1.0*@
            @*<div class="col-md-2">*@
            @*Rev 2.0 [id="divHide" and "mb-3" class added] *@
            <div class="col-md-2 h-branch-select mb-3" id="divFTHide">
                @*Rev end 1.0*@
                <label>Fuel Type</label><span class="red">*</span>
                <div id="divfuelType">

                    @Html.DropDownListFor(m => m.fuelID, new SelectList(Model.fueltype, "ID", "Name", Model.fuelID), "N.A", new { @id = "idfuel", @class = "form-control", @tabindex = 7 })

                </div>
            </div>

            @*Rev 2.0 [id="divHide" and "mb-3" class added] *@
            <div class="col-md-3 mb-3" id="divEDHide">
                <label>Eligible Distance(KM)</label><span class="red" id="spandistance">*</span>
                <div>

                    @Html.TextBoxFor(m => m.EligibleDistance, new { @class = "form-control", @id = "txtdistance", @tabindex = 8, onkeypress = "return isNumber(this,event)" })

                </div>
            </div>

            @*Rev 2.0 [id="divHide" and "mb-3" class added] *@
            <div class="col-md-2 mb-3" id="divERHide">
                <label>Eligible Rate</label><span class="red" id="spanrate">*</span>
                <div>

                    @Html.TextBoxFor(m => m.EligibleRate, new { @class = "form-control", @id = "txtRate", @tabindex = 9, onkeypress = "return isNumber(this,event)" })
                </div>
            </div>
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-2 mb-3">
                <label>Eligible Amount/Day</label><span class="red" id="spaneligible">*</span>
                <div>

                    @Html.TextBoxFor(m => m.EligibleAmtday, new { @class = "form-control", @id = "txteligibleamount", @tabindex = 10, onkeypress = "return isNumber(this,event)" })

                </div>
            </div>
            @*Rev 2.0 ["mb-3" class added] *@
            <div class="col-md-1 mb-3">
                <label>Active</label>
                <div>

                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "acheckbox", @id = "chkIsactive", @tabindex = 11 })

                </div>
            </div>
            @*Rev 2.0: id="forTopSpaceControl" added *@
            <div class="col-md-4 mb-3 mt-4" style="padding-top: 7px;" id="forTopSpaceControl">
                <label>&nbsp;</label>
                @*Rev 1.0: + icon add*@
                <button type="button" id="btnshow" class="btn btn-success " tabindex=12><span class="btn-icon"><i class="fa fa-plus"></i></span> Add</button>
                <button type="button" id="btnEdit" class="btn btn-success " tabindex=13>Update</button>
                <button type="button" id="btnclear" class="btn btn-success " tabindex=14>Cancel</button>

                <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds" tabindex=15>
                    <option value="0">Export to</option>
                    <option value="1">PDF</option>
                    <option value="2">XLSX</option>
                    <option value="3">XLS</option>
                    <option value="4">RTF</option>
                    <option value="5">CSV</option>

                </select>
            </div>
            <div class="col-md-12"></div>

        </div>
        <div style="clear: both;"><br /></div>
        <div id="refreshgridsalessummary">

            @{
                Html.RenderAction("ConfigurationPartial", "TravelConveyance");
            }
        </div>
    </div>

    <input type="hidden" id="hdTCid_id" />
    <input type="hidden" id="hdnuser_state" />
    <input type="hidden" id="hdnuser_shop" />
</div>
