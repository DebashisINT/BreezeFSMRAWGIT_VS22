@model Models.ReportPaitentOrderRegisterInput
@{
    ViewBag.Title = "Patient - Order Register";
}

<script src="~/Scripts/SearchPopup.js"></script>
@*<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />*@
<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/pluggins/choosen/choosen.min.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>

<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>


<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />



<script>
    var Is_PageLoad = "0";
    $(function () {

        var d = new Date();


        dtFrom.SetValue(d);
        dtTo.SetValue(d);

        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();
        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();

        //  $("#refreshgridstatusreportregister").hide();

        $("#drpuser").chosen({
            width: "100%"
        })
        $("#drpstate").chosen({
            width: "100%"
        })
        $("#drpshop").chosen({
            width: "100%"
        })

        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('body').on('click', '#btnshow', function () {
            GetEmpSelectedFieldValuesOndemand($("#hdnEmployeeId").val());
            var flag = true;
            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");

            var startdate = new Date(Date.parse(newdatefrom));
            //  alert(startdate);


            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");

            var endDate = new Date(Date.parse(newdateTo));

            if ($("#hdnStateMandatory").val() == "True") {
                if (StateId == "") {
                    jAlert("Please select State.");
                    flag = false;
                    return;
                }
            }

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');
            }
            else {
                var start = $('#dtFrom_I').val();
                var end = $('#dtTo_I').val();
                start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));
                if (flag) {
                    //if (dayse <= 30) {
                        $("#refreshgridstatusreportregister").show();
                        Is_PageLoad = "1";
                        gridpaitentorderregister.Refresh();
                        gridpaitentorderregister.Refresh();
                    //}
                    //else {
                    //    jAlert("Searching days must be within One month.");
                    //}
                }
            }
        });

        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExporRegisterList", "Report", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);
            }
        });
    });

    var StateId = [];
    function StateSelectionChanged(s, e) {
        StateGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {

        try {
            StateId = [];
            for (var i = 0; i < values.length; i++) {
                StateId.push(values[i]);
            }
        } finally {
            console.log(StateId);
        }


    }

    var ShopId = [];
    function ShopSelectionChanged(s, e) {
        ShopGridLookup.gridView.GetSelectedFieldValues("ID", GetShopSelectedFieldValuesCallback);
    }
    function GetShopSelectedFieldValuesCallback(values) {
        try {
            ShopId = [];
            for (var i = 0; i < values.length; i++) {
                ShopId.push(values[i]);
            }
        } finally {
            console.log(ShopId);
        }
    }

    var empId = [];
    function EmpSelectionChanged(s, e) {
        EmpGridLookup.gridView.GetSelectedFieldValues("empcode", GetEmpSelectedFieldValuesCallback);
    }
    function GetEmpSelectedFieldValuesCallback(values) {
        try {
            empId = [];
            for (var i = 0; i < values.length; i++) {
                empId.push(values[i]);
            }
        } finally {
            console.log(empId);
        }
    }

    function OnStartCallback(s, e) {

        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        //e.customArgs["selectedusrid"] = empId
        e.customArgs["empcode"] = empId;
        e.customArgs["StateId"] = StateId;
        e.customArgs["shopId"] = ShopId;
        //Mantis Issue 24593
        if ($('#IsSchemeDetails').prop('checked')) {
            e.customArgs["IsSchemeDetails"] = 1;
        }
        else {
            e.customArgs["IsSchemeDetails"] = 0;
        }

        //End of Mantis Issue 24593
        e.customArgs["Is_PageLoad"] = Is_PageLoad;
    }


    function LookupValChange() {
        EmpGridLookup.GetGridView().Refresh()
    }

    function EmpStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
        // e.customArgs["desgid"] = desigId;
        e.customArgs["userId"] = $("#hdnUserID").val();
    }

    function LookupShopValChange() {
        ShopGridLookup.GetGridView().Refresh()
    }

    function ShopStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
        //e.customArgs["desgid"] = desigId;
    }

    function OnStartCallbackshop(s, e) {
        //   gridgpsstatus.Refresh();

        e.customArgs["Fromdate"] = dtFrom.GetText();
        // e.customArgs["Fromdate"] = $('#txtfromDate').val();
        e.customArgs["Todate"] = $('#txttoDate').val();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
        e.customArgs["StateId"] = $("#hdnuser_state").val();
        e.customArgs["shopId"] = $("#hdnuser_shop").val();
        //Mantis Issue 24593
        if ($('#IsSchemeDetails').prop('checked')) {
            e.customArgs["IsSchemeDetails"] = 1;
        }
        else {
            e.customArgs["IsSchemeDetails"] = 0;
        }

        //End of Mantis Issue 24593

    }



    @*function OpenSHopVisitList(usrid) {

        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        var surl = '@Url.Action("ShopListActivity", "GPSStatus")';
        var usr = $("#drpuser").val();
        $.ajax({
            url: surl,
            async: false,
            data: {
                selectedusrid: usrid,
                Fromdate: $('#txtfromDate').val(),
                Todate: $('#txttoDate').val(),
            },
            type: 'POST',
            success: function (data) {

                $("#divModalBody").html(data);
                $("#myModal").modal('show');
            },
            error: function () {
            },

        });

        $("#myModal").modal('show');
        $("#refreshgridstatusgpsshowdetails").show();

        gridgpsstatusshoplist.Refresh();
        gridgpsstatusshoplist.Refresh();

    }*@


    $('#ddlAppIds').on('change', function () {
        if ($("#ddlAppIds option:selected").index() > 0) {
            var selectedValue = $(this).val();
            $('#ddlAppIds').prop("selectedIndex", 0);

            var url = '@Url.Action("ExporRegisterList", "Report", new { type = "_type_" })'
            window.location.href = url.replace("_type_", selectedValue);

        }
    });


    function StateStartCallback(s, e) {
        e.customArgs["UserID"] = $("#hdnUserID").val();
    }

    function EmpStateLookupValChange() {
        StateGridLookup.GetGridView().Refresh();
        StateGridLookup.GetGridView().Refresh();
    }
</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #StateGridLookup_ET > tbody > tr > td:first-child, #ShopGridLookup_ET > tbody > tr > td:first-child, #EmpGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }
</style>


<script>
    $(document).ready(function () {
        $('#EmployeeModel').on('shown.bs.modal', function () {
            $('#txtEmployeeSearch').focus();
        })
    })
    var ProdArr = new Array();
    $(document).ready(function () {
        var ProdObj = new Object();
        ProdObj.Name = "EmployeeSource";
        ProdObj.ArraySource = ProdArr;
        arrMultiPopup.push(ProdObj);
    })

    function EmployeeButnClick(s, e) {
        $('#EmployeeModel').modal('show');
    }

    function Employee_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#EmployeeModel').modal('show');
        }
    }

    function Employeekeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtEmployeeSearch").val()) == "" || $.trim($("#txtEmployeeSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtEmployeeSearch").val();
        OtherDetails.ClassID = "";

        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");


            if ($("#txtEmployeeSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetEmployeeList", OtherDetails, "EmployeeTable", HeaderCaption, "dPropertyIndex", "SetSelectedValues", "EmployeeSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtEmployeeSearch').focus();
        else
            $('#txtEmployeeSearch').focus();
    }

    function SetSelectedValues(Id, Name, ArrName) {
        if (ArrName == 'EmployeeSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeModel').modal('hide');
                EmployeeTxt.SetText(Name);
                $('#hdnEmployeeId').val(key);
            }
            else {
                EmployeeTxt.SetText('');
                $('#hdnEmployeeId').val('');
            }
        }
    }

    function GetEmpSelectedFieldValuesOndemand(values) {
        try {
            empId = [];
            var eids = values.split(',');
            for (var i = 0; i < eids.length; i++) {
                empId.push(eids[i]);
            }
        } finally {
            console.log(empId);
        }
    }

</script>

<link href="~/Content/media.css" rel="stylesheet" />
<style>
    .inputSpacer {
        padding-top: 22px;
    }

        .inputSpacer > input[type="checkbox"] {
            margin-right: 4px;
        }
</style>

<div class="breadCumb">
    <span>Patient - Order Register</span>
</div>
<div class="container">
    <div class="backBox mt-1 p-3 ">
        <div class="mx-4">
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        <table class="eqpadtbl mb-4">
                            <tr>
                                <td class="w150">
                                    <label>State</label>
                                    <div>
                                        @Html.Action("GetEmployeeWiseStateList", "MasterPopulate", new { UserID = @Session["userid"].ToString() })

                                        @*<select id="drpstate" name="drpstate" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">
                                                <option value="">Select</option>

                                                @foreach (var item in Model.states)
                                                {
                                                    if (Model.StateId == item.ID)
                                                    {
                                                        <option value="@item.ID" selected="selected">@item.StateName</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.ID">@item.StateName</option>
                                                    }
                                                }

                                            </select>*@

                                    </div>
                                </td>
                                <td class="w150">
                                    <label>Shop List</label>
                                    <div>
                                        @Html.Action("GetShopList", "MasterPopulate")

                                        @*<select id="drpshop" name="drpshop" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">
                                                <option value="">Select</option>
                                                @foreach (var item in Model.shoplist)
                                                {
                                                    if (Model.shopId == item.ID)
                                                    {
                                                        <option value="@item.ID" selected="selected">@item.Name</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.ID">@item.Name</option>
                                                    }
                                                }
                                            </select>*@

                                    </div>
                                </td>
                                <td class="w150">
                                    <label>Employee</label>
                                    <div>
                                        @*@Html.Action("GetEmpList", "MasterPopulate", new { userId = @Session["userid"].ToString() })*@
                                        @Html.DevExpress().ButtonEdit(
                                settings =>
                                {
                                    settings.Name = "EmployeeTxt";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Employee_KeyDown(s,e);}";

                                }).GetHtml()
                                        @*<select id="drpuser" name="ddRoles" data-placeholder="Click or Type Here..." class="whclass">

                                                <option value="">All</option>
                                                @foreach (var item in Model.userlsit)
                                                {
                                                    if (Model.selectedusrid == item.UserID)
                                                    {
                                                        <option value="@item.UserID" selected="selected">@item.username</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.UserID">@item.username</option>

                                                    }
                                                }
                                            </select>*@

                                    </div>
                                </td>
                                <td class="w150">
                                    <label>From Date</label>
                                    <div>
                                        @*@Html.TextBoxFor(m => m.Fromdate, new { @class = "form-control", @id = "txtfromDate", @tabindex = 2 })*@


                                        @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()

                                    </div>
                                </td>
                                <td class="w150">
                                    <label>To Date</label>
                                    <div>
                                        @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@

                                        @Html.DevExpress().DateEditFor(x => x.Todate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                }).GetHtml()
                                    </div>
                                </td>
                                @*Mantis Issue 24593*@
                                <td class="w10 inputSpacer">
                                    <input type="checkbox" id="IsSchemeDetails" name="IsSchemeDetails" value="0"><span class="w140">Scheme Details</span>
                                </td>
                                @*End of Mantis Issue 24593*@
                                <td style="padding-top: 22px;width:185px;">
                                    <label></label>
                                    <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>
                                    <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                                        <option value="0">Export to</option>
                                        <option value="1">PDF</option>
                                        <option value="2">XLSX</option>
                                        <option value="3">XLS</option>
                                        <option value="2">RTF</option>
                                        <option value="2">CSV</option>

                                    </select>

                                </td>
                            </tr>
                        </table>
                    </div>
                </div>








                <div class="form_main">


                    <div class="clear"></div>
                    <div id="refreshgrid">

                    </div>

                    <div id="refreshgridstatusreportregister">

                        @{

                    //Html.RenderAction("GetRegisterreporttatusList", "Report", new { Fromdate = Model.Fromdate, Todate = Model.Todate, empcode = Model.empcode, StateId = Model.StateId, shopId = Model.shopId });
                    Html.RenderAction("GetRegisterreporttatusList", "PaitentOrderRegister", new { Fromdate = Model.Fromdate, Todate = Model.Todate, empcode = Model.empcode, StateId = Model.StateId, shopId = Model.shopId, IsSchemeDetails = Model.IsSchemeDetails, Is_PageLoad = Model.Is_PageLoad });
                        }
                        @*change for design*@

                    </div>


                    <input type="hidden" id="hdnuser_id" />
                    <input type="hidden" id="hdnuser_state" />
                    <input type="hidden" id="hdnuser_shop" />



                    <input type="hidden" id="hdnUserID" value="@Session["userid"].ToString()" />
                    <input type="hidden" id="hdnStateMandatory" value="@ViewBag.StateMandatory" />

                    @*<div id="myModal" class="modal fade" data-backdrop="static" role="dialog">
                            <div class="modal-dialog modal-lg" style="width:1000px">

                                 Modal content
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        <h4 class="modal-title">Shop Visit List</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div id="divModalBody" style="padding-left:20px;">
                                            <div id="refreshgridstatusgpsshowdetails" style="display:none;">
                                                @{

                                                    //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                                                        Html.RenderAction("ShopListActivityList", "GPSStatus");

                                                }


                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>*@
                </div>
            </div>
        </div>
    </div>
</div>



<!--Employee Modal -->
<div class="modal fade pmsModal w50" id="EmployeeModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Employee Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="Employeekeydown(event)" id="txtEmployeeSearch" width="100%" placeholder="Search By Employee Name" />
                <div id="EmployeeTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('EmployeeSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnEmployeeId" runat="server" />
<!--Employee Modal -->