@*====================================================== Revision History ==========================================================*@
@*Written by Sanchita  for    V2.0.41      06-07-2023       A new report is required in FSM as "Order Summary(MTD). Mantis: 26429
    @*====================================================== Revision History ==========================================================*@

@model System.Data.DataSet

@Html.DevExpress().GridView(settings =>
{
    //settings.Name = "gridEmployeeAttendance";
    settings.Name = "gridOrderSummaryMTD";
    settings.ClientSideEvents.BeginCallback = "OnStartCallback";
    settings.CallbackRouteValues = new { Controller = "OrderSummaryMTD", Action = "OrderSummaryMTDGridViewCallback" };
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsContextMenu.FooterMenuItemVisibility.SummaryCount = true;
    //settings.SettingsSearchPanel.Visible = true;
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowFooter = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "30", "40", "50" };
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 10;

    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
    settings.Settings.VerticalScrollableHeight = 500;

    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
    //settings.Settings.ShowFilterRowMenu = true;
    settings.Styles.Header.Cursor = "default";
    settings.SettingsBehavior.AllowSort = false;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

    settings.Columns.Clear();


    System.Data.DataTable dtColumnTable = new System.Data.DataTable();

    if (Model != null && Model.Tables.Count > 0)
    {

        dtColumnTable = Model.Tables[0];
        if (dtColumnTable != null && dtColumnTable.Rows.Count > 0)
        {
            System.Data.DataRow[] drr = dtColumnTable.Select("PARRENTID=0");
            int i = 0;
            foreach (System.Data.DataRow dr in drr)
            {
                i = i + 1;
                System.Data.DataRow[] drrRow = dtColumnTable.Select("PARRENTID='" + Convert.ToString(dr["HEADID"]) + "'");

                if (drrRow.Length > 0)
                {

                    settings.Columns.AddBand(x =>
                    {
                        //x.FieldName = Convert.ToString(dr["HEADNAME"]);
                        x.Caption = Convert.ToString(dr["HEADNAME"]).Trim();
                        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                        x.VisibleIndex = i;
                        //x.Settings.AutoFilterCondition = AutoFilterCondition.Contains;

                        foreach (System.Data.DataRow drrs in drrRow)
                        {
                            System.Data.DataRow[] drrRows = dtColumnTable.Select("PARRENTID='" + Convert.ToString(drrs["HEADID"]) + "'");

                            if (drrRows.Length > 0)
                            {
                                x.Columns.AddBand(xSecond =>
                                {
                                    xSecond.Caption = Convert.ToString(drrs["HEADNAME"]).Trim();
                                    xSecond.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                                    foreach (System.Data.DataRow drrss in drrRows)
                                    {
                                        System.Data.DataRow[] drrRowss = dtColumnTable.Select("PARRENTID='" + Convert.ToString(drrss["HEADID"]) + "'");
                                        if (drrRowss.Length > 0)
                                        {

                                            xSecond.Columns.AddBand(xThird =>
                                            {
                                                xThird.Caption = Convert.ToString(drrss["HEADNAME"]).Trim();
                                                xThird.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                                                foreach (System.Data.DataRow drrrrs in drrRowss)
                                                {
                                                    xThird.Columns.Add(xFourth =>
                                                    {
                                                        xFourth.Caption = Convert.ToString(drrrrs["HEADNAME"]).Trim();
                                                        xFourth.FieldName = Convert.ToString(drrrrs["HEADSHRTNAME"]).Trim();
                                                        xFourth.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                                                        xFourth.Width = 220;

                                                    });
                                                }

                                            });


                                        }
                                        else
                                        {
                                            xSecond.Columns.Add(xThird =>
                                            {
                                                xThird.Caption = Convert.ToString(drrss["HEADNAME"]).Trim();
                                                xThird.FieldName = Convert.ToString(drrss["HEADSHRTNAME"]).Trim();
                                                xThird.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                                                xThird.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                                                xThird.Width = 220;

                                            });
                                        }

                                    }


                                });

                            }
                            else
                            {
                                x.Columns.Add(xSecond =>
                                {
                                    xSecond.Caption = Convert.ToString(drrs["HEADNAME"]).Trim();
                                    xSecond.FieldName = Convert.ToString(drrs["HEADSHRTNAME"]).Trim();
                                    xSecond.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                                    xSecond.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                                    xSecond.Width = 100;

                                });
                            }

                        }

                    });



                }
                else
                {
                    settings.Columns.Add(x =>
                    {
                        x.Caption = Convert.ToString(dr["HEADNAME"]).Trim();
                        x.FieldName = Convert.ToString(dr["HEADSHRTNAME"]).Trim();
                        x.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                        x.VisibleIndex = i;
                        x.Width = 150;

                    });
                }
            }

            //Footer Summary
            settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TOTALSHPCNT").DisplayFormat = "0";
            settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "UNIQUEORDCNT").DisplayFormat = "0";
            settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "ORDCNT").DisplayFormat = "0";

            System.Data.DataRow[] drrSum = dtColumnTable.Select("PARRENTID<>0 AND PARRENTID<>1");
            foreach (System.Data.DataRow drrSumLoop in drrSum)
            {
                settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, Convert.ToString(drrSumLoop["HEADSHRTNAME"]).Trim()).DisplayFormat = "0.00";
            }
            //End Footer Summary
        }

    }
    //settings.HtmlDataCellPrepared += (s, e) =>
    //{

    //    if (e.DataColumn.FieldName == "NEWSHOP_VISITED")
    //    {
    //        MVCxGridView grid = (MVCxGridView)s;
    //        var ID = (int)grid.GetRowValues(e.VisibleIndex, new string[] { "NEWSHOP_VISITED" });
    //        var EMPCODE = (string)grid.GetRowValues(e.VisibleIndex, new string[] { "EMPCODE" });
    //        var STATEID = grid.GetRowValues(e.VisibleIndex, new string[] { "STATEID" });
    //        var DEG_ID = grid.GetRowValues(e.VisibleIndex, new string[] { "DEG_ID" });
    //        var LOGINDATE = grid.GetRowValues(e.VisibleIndex, new string[] { "LOGINDATE" });
    //        var Visit_Type = "NEWSHOP_VISITED";
    //        var buttonHtml = "";
    //        if (ID.ToString() != "0")
    //        {
    //            buttonHtml = string.Format("&nbsp;&nbsp;<a class=\"infoButton\" onclick=\"shopclick('" + EMPCODE + "','" + STATEID + "','" + DEG_ID + "','" + Visit_Type + "','" + LOGINDATE + "');\" title=\"Show Details\">{0}</a>", ID);
    //        }
    //        else
    //        {
    //            buttonHtml = string.Format("&nbsp;&nbsp;<span>{0}</span>", ID);
    //        }
    //        e.Cell.Text = buttonHtml;
    //    }


    //};
    //settings.HtmlDataCellPrepared += (s, e) =>
    //{

    //    if (e.DataColumn.FieldName == "RE_VISITED")
    //    {
    //        MVCxGridView grid = (MVCxGridView)s;
    //        var ID = (int)grid.GetRowValues(e.VisibleIndex, new string[] { "RE_VISITED" });
    //        var EMPCODE = (string)grid.GetRowValues(e.VisibleIndex, new string[] { "EMPCODE" });
    //        var STATEID = grid.GetRowValues(e.VisibleIndex, new string[] { "STATEID" });
    //        var DEG_ID = grid.GetRowValues(e.VisibleIndex, new string[] { "DEG_ID" });
    //        var LOGINDATE = grid.GetRowValues(e.VisibleIndex, new string[] { "LOGINDATE" });
    //        var Visit_Type = "RE_VISITED";
    //        var buttonHtml = "";
    //        if (ID.ToString() != "0")
    //        {
    //            buttonHtml = string.Format("&nbsp;&nbsp;<a class=\"infoButton\" onclick=\"shopclick('" + EMPCODE + "','" + STATEID + "','" + DEG_ID + "','" + Visit_Type + "','" + LOGINDATE + "');\" title=\"Show Details\">{0}</a>", ID);
    //        }
    //        else
    //        {
    //            buttonHtml = string.Format("&nbsp;&nbsp;<span>{0}</span>", ID);
    //        }
    //        e.Cell.Text = buttonHtml;
    //    }


    //};
    //settings.HtmlDataCellPrepared += (s, e) =>
    //    {

    //        if (e.DataColumn.Caption == "Show Attendance Selfie")
    //        {
    //            MVCxGridView grid = (MVCxGridView)s;


    //            var buttonHtml = "";

    //            if (grid.GetRowValues(e.VisibleIndex, e.DataColumn.FieldName) != "")
    //            {
    //                buttonHtml = Convert.ToString(grid.GetRowValues(e.VisibleIndex, e.DataColumn.FieldName));
    //            }
    //            else
    //            {
    //                buttonHtml = string.Format("<span>No Image Found </span>", "");
    //            }

    //            e.Cell.Text = buttonHtml;
    //        }
    //    };

}).Bind((System.Data.DataTable)Model.Tables[1]).GetHtml()





