@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                23-01-2023        2.0.38           Pallab              25576: Report page design modification *@
@*====================================================== Revision History ==========================================================*@

@model Models.Reportorderregisterinput
@{
    ViewBag.Title = "InvoiceDeliveryRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@*<script type="text/javascript" src="~/Scripts/globalize.js"></script>
    <script src="~/Scripts/cultures/globalize.cultures.js"></script>*@
<script src="~/Scripts/SearchPopup.js"></script>
@*<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />*@
<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/pluggins/choosen/choosen.min.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>

<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
@*Rev Debashis 0025198*@
<style>
    #BranchGridLookup_CC {
        width: 100%;
    }
</style>
@*End of Rev Debashis 0025198*@
<script>
    var Is_PageLoad = "Ispageload";
    $(function () {

        var d = new Date();


        dtFrom.SetValue(d);
        dtTo.SetValue(d);

        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();
        var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        lookup.GetGridView().Refresh();
        //Rev Debashis 0025198
        var lookup = ASPxClientControl.GetControlCollection().GetByName("BranchGridLookup");
        lookup.GetGridView().Refresh();
        var lookup = ASPxClientControl.GetControlCollection().GetByName("BranchGridLookup");
        lookup.GetGridView().Refresh();
        //End of Rev Debashis 0025198
        //  $("#refreshgridstatusreportregister").hide();

        $("#drpuser").chosen({
            width: "100%"
        })
        $("#drpstate").chosen({
            width: "100%"
        })
        $("#drpshop").chosen({
            width: "100%"
        })

        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            }
        });

        $('body').on('click', '#btnshow', function () {
            GetEmpSelectedFieldValuesOndemand($("#hdnEmployeeId").val());
            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");

            var startdate = new Date(Date.parse(newdatefrom));
            //  alert(startdate);


            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");

            var endDate = new Date(Date.parse(newdateTo));

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');
            }
            else {
                var start = $('#dtFrom_I').val();
                var end = $('#dtTo_I').val();
                start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));

                if (dayse <= 30) {
                    //Rev Debashis 0025198
                    if (BranchId == "" || BranchId == null) {
                        jAlert("Please select Branch.");
                        flag = false;
                        return false;
                    }
                    else {
                        //End of Rev Debashis 0025198
                        $("#refreshgridstatusinvoiceorderreportregister").show();
                        Is_PageLoad = "1";

                        $.ajax({
                            url: "@Url.Action("GetOrderRegisterList", "InvoiceDeliveryRegister")",
                            //url: 'InvoiceDeliveryRegister/GetOrderRegisterList',
                            async: false,
                            data: {
                                Fromdate: dtFrom.GetText(),
                                Todate: dtTo.GetText(),
                                //Rev Debashis 0025198
                                BranchId:BranchId,
                                //End of Rev Debashis 0025198
                                empcode: empId,
                                StateId: StateId,
                                shopId: ShopId,
                                Is_PageLoad: Is_PageLoad
                            },
                            type: 'POST',
                            success: function (data) {

                                gridInvoceorderregister.Refresh();
                                gridInvoceorderregister.Refresh();
                            },
                            error: function () {
                            },

                        });
                        //Rev Debashis 0025198
                    }
                    //End of Rev Debashis 0025198
                }
                else {
                    jAlert("Searching days must be within One month.");
                }
            }

        });

        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExporRegisterList", "InvoiceDeliveryRegister", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });


    });

    var StateId = [];
    function StateSelectionChanged(s, e) {
        StateGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {

        try {
            StateId = [];
            for (var i = 0; i < values.length; i++) {
                StateId.push(values[i]);
            }
        } finally {
            console.log(StateId);
        }


    }

    var ShopId = [];
    function ShopSelectionChanged(s, e) {
        ShopGridLookup.gridView.GetSelectedFieldValues("ID", GetShopSelectedFieldValuesCallback);
    }
    function GetShopSelectedFieldValuesCallback(values) {
        try {
            ShopId = [];
            for (var i = 0; i < values.length; i++) {
                ShopId.push(values[i]);
            }
        } finally {
            console.log(ShopId);
        }
    }

    var empId = [];
    function EmpSelectionChanged(s, e) {
        EmpGridLookup.gridView.GetSelectedFieldValues("empcode", GetEmpSelectedFieldValuesCallback);
    }
    function GetEmpSelectedFieldValuesCallback(values) {
        try {
            empId = [];
            for (var i = 0; i < values.length; i++) {
                empId.push(values[i]);
            }
        } finally {
            console.log(empId);
        }
    }

    //Rev Debashis 0025198
    function BranchStartCallback(s, e) {
        e.customArgs["UserID"] = $("#hdnUserID").val();
    }

    function BranchLookupValChange() {
        BranchGridLookup.GetGridView().Refresh();
    }
    //End of Rev Debashis 0025198

    function OnStartCallback(s, e) {

        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        //e.customArgs["selectedusrid"] = empId
        //Rev Debashis 0025198
        e.customArgs["BranchId"] = BranchId;
        //End of Rev Debashis 0025198
        e.customArgs["empcode"] = empId;
        e.customArgs["StateId"] = StateId;
        e.customArgs["shopId"] = ShopId;
        e.customArgs["Is_PageLoad"] = Is_PageLoad;
    }

    //Rev Debashis 0025198
    var BranchId = [];
    var Branch_Id = "";
    function BranchSelectionChanged(s, e) {
        BranchGridLookup.gridView.GetSelectedFieldValues("BRANCH_ID", GetSelectedFieldValuesCallbackBranch);
    }
    function GetSelectedFieldValuesCallbackBranch(values) {

        try {
            BranchId = [];
            Branch_Id = "";
            for (var i = 0; i < values.length; i++) {
                BranchId.push(values[i]);
                Branch_Id += values[i] + ',';
            }
        } finally {
            console.log(BranchId);
        }
    }

    function SelectAllGridLookup(s, e) {
        BranchGridLookup.gridView.SelectRows();
        var Hoid = $('#HeadBranch').val();
        BranchId = "";
        BranchGridLookup.SetText("");
        if (Hoid == null || Hoid == "") {
            //Hoid = "0";
            return false;
        }
        else {
            $.ajax({
                type: 'POST',
                url: "/MasterPopulate/GetSelectedChildBranchList",
                data: { "Hoid": Hoid },
                dataType: "json",
                async: false,
                success: function (data) {
                    BranchId = [];
                    Branch_Id = "";
                    $.each(data, function (i, data) {
                        BranchId.push(data.BRANCH_ID);
                        Branch_Id += data.BRANCH_ID + ',';
                    });
                    BranchGridLookup.gridView.SelectRows();
                },
                error: function () {
                }
            });
        }
    }
    function DeSelectAllGridLookup(s, e) {
        BranchGridLookup.gridView.UnselectRows();

        BranchId = [];
        Branch_Id = "";
    }
    //End of Rev Debashis 0025198


    function LookupValChange() {
        EmpGridLookup.GetGridView().Refresh()
    }

    function EmpStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
        // e.customArgs["desgid"] = desigId;
    }

    function LookupShopValChange() {
        ShopGridLookup.GetGridView().Refresh()
    }

    function ShopStartCallback(s, e) {
        e.customArgs["StateId"] = StateId;
        //e.customArgs["desgid"] = desigId;
    }

    function OnStartCallbackshop(s, e) {
        //   gridgpsstatus.Refresh();

        e.customArgs["Fromdate"] = dtFrom.GetText();
        // e.customArgs["Fromdate"] = $('#txtfromDate').val();
        e.customArgs["Todate"] = $('#txttoDate').val();
        e.customArgs["selectedusrid"] = $("#hdnuser_id").val();
        e.customArgs["StateId"] = $("#hdnuser_state").val();
        e.customArgs["shopId"] = $("#hdnuser_shop").val();
        //Rev Debashis 0025198
        e.customArgs["BranchId"] = BranchId;
        //End of Rev Debashis 0025198
    }



    @*function OpenSHopVisitList(usrid) {

        //alert(usrid);
        $("#hdnuser_id").val(usrid);
        //alert($("#hdnuser_id").val());


        var surl = '@Url.Action("ShopListActivity", "GPSStatus")';
        var usr = $("#drpuser").val();
        $.ajax({
            url: surl,
            async: false,
            data: {
                selectedusrid: usrid,
                Fromdate: $('#txtfromDate').val(),
                Todate: $('#txttoDate').val(),
            },
            type: 'POST',
            success: function (data) {

                $("#divModalBody").html(data);
                $("#myModal").modal('show');
            },
            error: function () {
            },

        });

        $("#myModal").modal('show');
        $("#refreshgridstatusgpsshowdetails").show();

        gridgpsstatusshoplist.Refresh();
        gridgpsstatusshoplist.Refresh();

    }*@


    $('#ddlAppIds').on('change', function () {
        if ($("#ddlAppIds option:selected").index() > 0) {
            var selectedValue = $(this).val();
            $('#ddlAppIds').prop("selectedIndex", 0);

            var url = '@Url.Action("ExporRegisterList", "Report", new { type = "_type_" })'
            window.location.href = url.replace("_type_", selectedValue);

        }
    });
    function OpenReimbursementImage(MapExpenseID) {

        $.ajax({
            type: "POST",
            url: "@Url.Action("LoadImageDocument", "InvoiceDeliveryRegister")",
            data: { MapExpenseID: MapExpenseID },
            success: function (response) {
                //alert(response);
                if (response) {
                    window.open(response.FileName);
                    //pcModalImage.SetContentHtml(response);
                    //MVCxClientUtils.FinalizeCallback();
                    //pcModalImage.Show();
                }
                else {
                    jAlert("Attachment not found.")
                }
            },
            error: function (response) {
                jAlert("Attachment not found.")
            }
        });

    }

    function StateStartCallback(s, e) {
        e.customArgs["UserID"] = $("#hdnUserID").val();
    }

    function EmpStateLookupValChange() {
        StateGridLookup.GetGridView().Refresh();
        StateGridLookup.GetGridView().Refresh();
    }
</script>

<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #BranchGridLookup_ET > tbody > tr > td:first-child, #StateGridLookup_ET > tbody > tr > td:first-child, #ShopGridLookup_ET > tbody > tr > td:first-child, #EmpGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }

    /*Rev 1.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 24px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 34px;
            right: 18px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .whclass.selectH, #ddlShowReport {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/


    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 135px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }
    /*Rev end 1.0*/
</style>


<script>
    $(document).ready(function () {
        $('#EmployeeModel').on('shown.bs.modal', function () {
            $('#txtEmployeeSearch').focus();
        })
    })
    var ProdArr = new Array();
    $(document).ready(function () {
        var ProdObj = new Object();
        ProdObj.Name = "EmployeeSource";
        ProdObj.ArraySource = ProdArr;
        arrMultiPopup.push(ProdObj);
    })

    function EmployeeButnClick(s, e) {
        $('#EmployeeModel').modal('show');
    }

    function Employee_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#EmployeeModel').modal('show');
        }
    }

    function Employeekeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtEmployeeSearch").val()) == "" || $.trim($("#txtEmployeeSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtEmployeeSearch").val();
        OtherDetails.ClassID = "";

        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");


            if ($("#txtEmployeeSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetEmployeeList", OtherDetails, "EmployeeTable", HeaderCaption, "dPropertyIndex", "SetSelectedValues", "EmployeeSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtEmployeeSearch').focus();
        else
            $('#txtEmployeeSearch').focus();
    }

    function SetSelectedValues(Id, Name, ArrName) {
        if (ArrName == 'EmployeeSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#EmployeeModel').modal('hide');
                EmployeeTxt.SetText(Name);
                $('#hdnEmployeeId').val(key);
            }
            else {
                EmployeeTxt.SetText('');
                $('#hdnEmployeeId').val('');
            }
        }
    }

    function GetEmpSelectedFieldValuesOndemand(values) {
        try {
            empId = [];
            var eids = values.split(',');
            for (var i = 0; i < eids.length; i++) {
                empId.push(eids[i]);
            }
        } finally {
            console.log(empId);
        }
    }

    //Rev Debashis 0025198
    function BindBranches() {
        var Hoid = $('#HeadBranch').val();
        BranchId = "";
        BranchGridLookup.SetText("");
        if (Hoid == null || Hoid == "") {
            //Hoid = "0";
            return false;
        }
        else {
            $.ajax({
                type: 'POST',
                url: "/MasterPopulate/GetChildBranchList",
                data: { "Hoid": Hoid },
                dataType: "json",
                async: false,
                success: function (data) {
                },
                error: function () {
                }
            });
            BranchGridLookup.GetGridView().Refresh();
        }
    }
    //End of Rev Debashis 0025198
</script>
<link href="~/Content/media.css" rel="stylesheet" />

<div class="breadCumb">
    <span>Invoice/Delivery Register</span>
</div>
<div class="container">
    <div class="backBox mt-5 p-3 ">
        <div class="row">
            <div class="col-md-12">

                <div class="row">
                    <table class="eqpadtbl mb-4 mx-4">
                        <tr>
                            @*Rev Debashis 0025198*@
                            @*Rev 1.0*@
                            @*<td style="width:186px;">*@
                            <td style="width:160px;" class="h-branch-select">
                                @*Rev end 1.0*@
                                <label>Head Branch : </label>
                                <select id="HeadBranch" name="HeadBranch" onchange="BindBranches()" data-placeholder="Click or Type Here..." class="whclass selectH">
                                    @foreach (var item in Model.modelbranch)
                                    {
                                        <option value="@item.BRANCH_ID">@item.CODE</option>
                                    }
                                </select>
                            </td>
                            <td class="w150">
                                <label>Branch </label>
                                <div>
                                    @*@Html.Action("GetChildBranchList", "MasterPopulate", new { Hoid = "0" })*@
                                    @Html.Action("GetChildBranchList", "MasterPopulate", new { Hoid = @ViewBag.h_id })
                                </div>
                            </td>
                            @*End of Rev Debashis 0025198*@
                            <td class="w150">
                                <label>State</label>
                                <div>
                                    @*@Html.Action("GetStateList", "MasterPopulate")*@
                                    @Html.Action("GetEmployeeWiseStateList", "MasterPopulate", new { UserID = @Session["userid"].ToString() })

                                    @*<select id="drpstate" name="drpstate" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">*@
                                    @*<option value="">Select</option>*@

                                    @*@foreach (var item in Model.StateName)
                {
                if (Model.ID == item.ID)
                {
                <option value="@item.ID" selected="selected">@item.StateName</option>
                }
                else
                {
                <option value="@item.ID">@item.StateName</option>
                }
                }*@

                                    @*</select>*@

                                </div>
                            </td>
                            <td class="w150">
                                <label>Shop List</label>
                                <div>
                                    @Html.Action("GetShopList", "MasterPopulate")

                                    @*<select id="drpshop" name="drpshop" data-placeholder="Click or Type Here..." class="whclass" style="width:100%">
                <option value="">Select</option>
                @foreach (var item in Model.shoplist)
                {
                if (Model.shopId == item.ID)
                {
                <option value="@item.ID" selected="selected">@item.Name</option>
                }
                else
                {
                <option value="@item.ID">@item.Name</option>
                }
                }
                </select>*@

                                </div>
                            </td>
                            <td class="w150">
                                <label>Employee</label>
                                <div>
                                    @*@Html.Action("GetEmpList", "MasterPopulate")*@
                                    @Html.DevExpress().ButtonEdit(
                                    settings =>
                                    {
                                    settings.Name = "EmployeeTxt";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Employee_KeyDown(s,e);}";

                                    }).GetHtml()
                                    @*<select id="drpuser" name="ddRoles" data-placeholder="Click or Type Here..." class="whclass">

                <option value="">All</option>
                @foreach (var item in Model.userlsit)
                {
                if (Model.selectedusrid == item.UserID)
                {
                <option value="@item.UserID" selected="selected">@item.username</option>
                }
                else
                {
                <option value="@item.UserID">@item.username</option>

                }
                }
                </select>*@

                                </div>
                            </td>
                            @*Rev 1.0*@
                            @*<td class="w150">*@
                            <td class="w150 for-cust-icon">
                                @*Rev end 1.0*@
                                <label>From Date</label>
                                <div>
                                    @*@Html.TextBoxFor(m => m.Fromdate, new { @class = "form-control", @id = "txtfromDate", @tabindex = 2 })*@


                                    @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                    deSettings =>
                                    {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    }).GetHtml()
                                    @*Rev 1.0*@
                                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                    @*Rev end 1.0*@
                                </div>
                            </td>
                            @*Rev 1.0*@
                            @*<td class="w150">*@
                            <td class="w150 for-cust-icon">
                                @*Rev end 1.0*@
                                <label>To Date</label>
                                <div>
                                    @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@

                                    @Html.DevExpress().DateEditFor(x => x.Todate,
                                    deSettings =>
                                    {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    }).GetHtml()
                                    @*Rev 1.0*@
                                    <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                    @*Rev end 1.0*@
                                </div>
                            </td>
                            @*Rev 1.0*@
                            @*<td style="padding-top: 22px;width:170px;">*@
                            <td style="padding-top: 24px;width:180px;">
                                @*Rev end 1.0*@
                                <label></label>
                                <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>
                                <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                                    <option value="0">Export to</option>
                                    <option value="1">PDF</option>
                                    <option value="2">XLSX</option>
                                    <option value="3">XLS</option>
                                    <option value="2">RTF</option>
                                    <option value="2">CSV</option>

                                </select>

                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="mx-4">
                <div class="form_main">


                    <div class="clear"></div>
                    <div id="refreshgrid">

                    </div>

                    <div id="refreshgridstatusinvoiceorderreportregister">

                        @{
                            //Rev Debashis 0025198
                            //Html.RenderAction("GetInvoiceRegisterreporttatusList", "InvoiceDeliveryRegister", new { Fromdate = Model.Fromdate, Todate = Model.Todate, empcode = Model.empcode, StateId = Model.StateId, shopId = Model.shopId, Is_PageLoad = "Ispageload" });
                            Html.RenderAction("GetInvoiceRegisterreporttatusList", "InvoiceDeliveryRegister", new { Fromdate = Model.Fromdate, Todate = Model.Todate, BranchId = Model.BranchId, empcode = Model.empcode, StateId = Model.StateId, shopId = Model.shopId, Is_PageLoad = "Ispageload" });
                            //End of Rev Debashis 0025198
                        }
                        @*change for design*@

                    </div>


                    <input type="hidden" id="hdnuser_id" />
                    <input type="hidden" id="hdnuser_state" />
                    <input type="hidden" id="hdnuser_shop" />

                    <input type="hidden" id="hdnUserID" value="@Session["userid"].ToString()" />



                    @*<div id="myModal" class="modal fade" data-backdrop="static" role="dialog">
                        <div class="modal-dialog modal-lg" style="width:1000px">

                        Modal content
                        <div class="modal-content">
                        <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Shop Visit List</h4>
                        </div>
                        <div class="modal-body">
                        <div id="divModalBody" style="padding-left:20px;">
                        <div id="refreshgridstatusgpsshowdetails" style="display:none;">
                        @{

                        //Html.RenderAction("ShopListActivity", "GPSStatus", new { Fromdate = Model.Fromdate, Todate = Model.Todate });

                        Html.RenderAction("ShopListActivityList", "GPSStatus");

                        }


                        </div>
                        </div>
                        </div>
                        </div>

                        </div>
                        </div>*@
                    @Html.DevExpress().PopupControl(
                    settings =>
                    {
                    settings.Name = "pcModalImage";
                    settings.Width = 600;
                    settings.Height = 400;
                    //settings.ScrollBars.v
                    settings.AllowDragging = true;
                    settings.CloseAction = CloseAction.CloseButton;
                    settings.CloseOnEscape = true;
                    settings.PopupAnimationType = AnimationType.None;
                    settings.HeaderText = "View Documents";
                    settings.Modal = true;
                    settings.AutoUpdatePosition = true;
                    settings.Top = 50;
                    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                    settings.PopupVerticalAlign = PopupVerticalAlign.Above;
                    settings.SetContent(() =>
                    { });

                    // settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
                    }).GetHtml()

                </div>
            </div>
        </div>
    </div>
</div>


<!--Employee Modal -->
<div class="modal fade pmsModal w50" id="EmployeeModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Employee Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="Employeekeydown(event)" id="txtEmployeeSearch" width="100%" placeholder="Search By Employee Name" />
                <div id="EmployeeTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('EmployeeSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnEmployeeId" runat="server" />
<!--Employee Modal -->