@*====================================================== Revision History ===================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                16-02-2023        V2.0.39          Pallab              Settings/Options module design modification *@
@*====================================================== Revision History ===================================================*@

@using MyShop.Models;
@model DashBoardSetting

@{
    var DashboardSettingMappedObj = Model.DashboardSettingMappedList;
}
<style>
    #divDashboardHeaderList .panel:last-child {
        margin-bottom: 0;
    }

    ul.inline-list {
        padding-left: 0;
        margin-bottom: 0;
    }

    .inline-list > li {
        display: inline-block;
        list-style-type: none;
        margin-right: 20px;
        margin-bottom: 8px;
    }

        .inline-list > li > input {
            -webkit-transform: translateY(3px);
            -moz-transform: translateY(3px);
            transform: translateY(3px);
            margin-right: 4px;
        }

    .panel-title > a {
        font-size: 13px !important;
        display: inline-block;
        padding-left: 10px;
    }

    #list2 option,
    #list1 option {
        padding: 5px 3px;
    }

    .padTbl > tbody > tr > td {
        padding-right: 20px;
        vertical-align: central;
    }

        .padTbl > tbody > tr > td > label {
            margin-bottom: 0px !important;
        }

    #divDashboardHeaderList .panel-title {
        position: relative;
    }

        #divDashboardHeaderList .panel-title > a:focus {
            text-decoration: none;
        }

        #divDashboardHeaderList .panel-title > a:after {
            content: '\f056';
            font-family: FontAwesome;
            font-size: 18px;
            position: absolute;
            right: 10px;
            top: 1px;
            color: #094e8c;
        }

        #divDashboardHeaderList .panel-title > a + input[type="checkbox"] {
            -webkit-transform: translateY(2px);
            -moz-transform: translateY(2px);
            transform: translateY(2px);
        }

        #divDashboardHeaderList .panel-title > a.collapsed:after {
            content: '\f055';
        }

    .errorField {
        position: absolute;
        right: -17px;
        top: 3px;
    }

    #multiselect_to option, #multiselect option {
        padding: 5px 3px;
    }

    .min3 {
        min-height: 150px;
    }

    .pad28 {
        padding-top: 18px;
    }

    /*Rev 1.0*/

    body, .dxtcLite_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            /*content: '<';*/
            content: url(../../../assests/images/left-arw.png);
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 13px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 7px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 9px;
        right: 24px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select, .h-branch-select-new {
        position: relative;
    }

        .h-branch-select::after {
            /*content: '<';*/
            content: url(../../../assests/images/left-arw.png);
            position: absolute;
            top: 27px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 17px;
            z-index: 0;
        }

        .h-branch-select-new::after {
            content: '<';
            /*content: url(../../../assests/images/left-arw.png);*/
            position: absolute;
            top: 9px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    select:not(.btn):focus {
        border-color: #094e8c;
    }

    select:not(.btn):focus-visible {
        box-shadow: none;
        outline: none;
    }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    select:not(.btn) {
        padding-right: 30px;
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue,
    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo, #FormDate, #toDate, #proj_start_dt {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .modal-content {
        border: none;
        border-radius: 10px;
    }

    .modal-header .modal-title {
        font-size: 14px;
    }

    .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1, #cmbDOJ_B-1, #cmbLeaveEff_B-1, #FormDate_B-1, #toDate_B-1, #proj_start_dt_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img, #cmbDOJ_B-1 #cmbDOJ_B-1Img, #cmbLeaveEff_B-1 #cmbLeaveEff_B-1Img, #FormDate_B-1 #FormDate_B-1Img, #toDate_B-1 #toDate_B-1Img, #proj_start_dt_B-1 #proj_start_dt_B-1Img {
            display: none;
        }

    #FormDate_I, #toDate_I, #proj_start_dt_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        /*z-index: 1;*/
    }

    .pad-md-18 {
        padding-top: 10px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    .dxeCalendarSelected_PlasticBlue {
        color: White;
        background-color: #185598;
    }

    .dxeTextBox_PlasticBlue {
        height: 34px;
        border-radius: 4px;
    }

    #cmbDOJ_DDD_PW-1 {
        z-index: 9999 !important;
    }

    #cmbDOJ, #cmbLeaveEff {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    .btn-sm, .btn-xs {
        padding: 7px 10px !important;
    }

    #productAttributePopUp_PWH-1 span, #ASPxPopupControl2_PWH-1 span {
        color: #fff !important;
    }

    #marketsGrid_DXPEForm_tcefnew, .dxgvPopupEditForm_PlasticBlue {
        height: 220px !important;
    }

    .btn {
        height: 34px;
    }

    .dxpcLite_PlasticBlue .dxpc-header, .dxdpLite_PlasticBlue .dxpc-header {
        padding: 6px 4px 6px 10px;
        background: #094e8c;
    }

    #pcModalMode_PW-1 {
        border-radius: 12px;
        overflow: hidden;
    }

    /*Rev end 1.0*/
</style>
<div class="mainArea clearfix pTop10" style="background-color: white;height:80vh;overflow-y:auto">

    @Html.HiddenFor(x => x.DashboardSettingID)
    <div class="clearfix">
        <div class="col-lg-4">
            <label><b>Settings Name</b><span style="color: red">*</span></label>
            @Html.TextBoxFor(m => m.SettingName, new { @class = "form-control" })
        </div>
        @*Rev 1.0*@
        @*<div class="col-lg-4">*@
        <div class="col-lg-4 h-branch-select">
            @*Rev end 1.0*@
            <label><b>User Group</b></label>
            @Html.DropDownList("ddlUserGroup", new SelectList(Model.UserGroupList, "grp_id", "grp_name"), new { @id = "ddlUserGroup", @class = "form-control", @onChange = "UserGroupChange(this)" })
        </div>

        <div class="col-lg-4">
            <label><b>Permission Level</b></label>
            <div>
                <input type="radio" name="PermissionLevel" value="0" @(Model.PermissionLevel == 0 ? "checked='checked'" : "") /> All
                <input type="radio" name="PermissionLevel" value="1" @(Model.PermissionLevel == 1 ? "checked='checked'" : "") /> Only Hierarchy
            </div>
        </div>
    </div>



    <div class="clearfix">
        <div class="col-md-12"> </div>
        <div class="col-xs-5 mt-2">
            <label><b>Users</b></label>
            <div>
                @Html.DropDownList("ddlUser", new SelectList(Model.UserList, "UserID", "username"), new { @id = "multiselect", @class = "form-control min3", @multiple = "multiple", @name = "from" })
            </div>

        </div>
        <div class="col-xs-2 text-center pad28 mt-2">
            @*Rev 1.0 : "mb-2" class add*@
            <button type="button" id="multiselect_rightAll" class="btn btn-primary mb-2"><i class="glyphicon glyphicon-forward"></i></button><br />
            <button type="button" id="multiselect_rightSelected" class="btn btn-primary mb-2"><i class="glyphicon glyphicon-chevron-right"></i></button><br />
            <button type="button" id="multiselect_leftSelected" class="btn btn-primary mb-2"><i class="glyphicon glyphicon-chevron-left"></i></button><br />
            <button type="button" id="multiselect_leftAll" class="btn btn-primary"><i class="glyphicon glyphicon-backward"></i></button>
        </div>
        <div class="col-xs-5 mt-2">
            <label><b>Selected Users</b></label>
            <select name="to" id="multiselect_to" class="form-control min3" multiple="multiple">
                @if (DashboardSettingMappedObj != null)
                {
                    foreach (var item in DashboardSettingMappedObj.GroupBy(x => x.FKuser_id).Select(x => x.FirstOrDefault()).ToList())
                    {
                        <option value="@item.FKuser_id">@item.User_Name</option>
                    }
                }
            </select>

        </div>
    </div>

    <div class="" id="divDashboardHeaderList" style="padding:15px;">
        @foreach (var item in Model.DashboardHeaderList)
        {
            <div class="panel panel-default clsListheader">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#divDashboardHeaderList" class="" href="#collapse_@item.DashboardHeaderID" aria-expanded="true">@item.HeaderName</a>
                        <input type="checkbox" class="chkHeaderSelect" value="@item.DashboardHeaderID" onchange="chkSubListCheckAll(this)" />
                    </h4>
                </div>
                <div id="collapse_@item.DashboardHeaderID" class="panel-collapse collapse in" aria-expanded="true" style="">
                    <div class="panel-body SelectSubList">
                        <ul class="inline-list">

                            @foreach (var subitem in Model.DashboardDetailsList.Where(x => x.FKDashboardHeaderID == item.DashboardHeaderID))
                            {
                                if (DashboardSettingMappedObj != null)
                                {
                                    if (DashboardSettingMappedObj.Where(x => x.FKDashboardDetailsID == subitem.DashboardDetailsID).Count() > 0)
                                    {
                                        <li><input type="checkbox" value="@subitem.DashboardDetailsID" checked="checked" class="chkHeaderSelectSubList_@item.DashboardHeaderID" /> @subitem.DetailsName</li>

                                    }
                                    else
                                    {
                                        <li><input type="checkbox" value="@subitem.DashboardDetailsID" class="chkHeaderSelectSubList_@item.DashboardHeaderID" /> @subitem.DetailsName</li>

                                    }
                                }
                                else
                                {
                                    <li><input type="checkbox" value="@subitem.DashboardDetailsID" class="chkHeaderSelectSubList_@item.DashboardHeaderID" /> @subitem.DetailsName</li>

                                }

                            }


                        </ul>
                    </div>
                </div>

            </div>
        }

    </div>

    <div class="col-md-12 text-center">
        <button type="button" class="btn btn-success" onclick="DashboardSettingSave()">Create Setting</button>
        <button type="button" class="btn btn-danger" onclick="DashboardSettingCancel()">Cancel</button>
    </div>

</div>
