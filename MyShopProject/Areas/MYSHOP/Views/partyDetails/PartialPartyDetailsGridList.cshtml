@*====================================================== Revision History ===========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                03-05-2024        V2 .0.47         Priti               0027407: "Party Status" - needs to add in the following reports. *@
@*2.0                29/05/2024        V2.0.47          Sanchita            0027405: Colum Chooser Option needs to add for the following Modules*@
@*3.0                15-11-2024        V2.0.49          Priti               0027799: A new Global settings required as WillShowLoanDetailsInParty.*@

@*====================================================== Revision History ===========================================================*@
@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gridPartyDetails";
    settings.KeyFieldName = "ID";
    settings.CallbackRouteValues = new { Action = "PartialPartyDetailsGridList", Controller = "partyDetails" };
    settings.ClientSideEvents.BeginCallback = "OnStartCallback";

    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    //settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.VerticalScrollableHeight = 400;


    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
    settings.SettingsContextMenu.FooterMenuItemVisibility.SummaryCount = true;
    settings.SettingsSearchPanel.Visible = true;
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowGroupPanel = false;
    settings.SettingsContextMenu.EnableColumnMenu = DefaultBoolean.True;

    settings.Settings.ShowFooter = true;
    settings.SettingsContextMenu.EnableFooterMenu = DefaultBoolean.True;

    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "30", "50", "100" };
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 10;

    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;

    // Rev 2.0
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsContextMenu.Enabled = true;
    settings.ClientSideEvents.CustomizationWindowCloseUp = "grid_CustomizationWindowCloseUp";
    // End of Rev 2.0


    //settings.Columns.Add(x =>
    //{
    //    x.FieldName = "StateHead";
    //    x.Caption = "State Head";
    //    x.VisibleIndex = 2;
    //    x.Width = 200;
    //});

    //settings.Columns.Add(x =>
    //{
    //    x.FieldName = "StateHeadCode";
    //    x.Caption = "State Head Code";
    //    x.VisibleIndex = 3;
    //    x.Width = 100;
    //});

    settings.Columns.Add(x =>
    {
        x.FieldName = "EmpName";
        x.Caption = "Emp. Name";
        x.VisibleIndex = 1;
        x.Width = 200;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='EmpName'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "EmpCode";
        x.Caption = "Emp. Code";
        x.VisibleIndex = 2;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='EmpCode'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Designation";
        x.Caption = "Designation";
        x.VisibleIndex = 3;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Designation'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Supervisor";
        x.Caption = "Supervisor";
        x.VisibleIndex = 4;
        x.Width = 200;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Supervisor'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "SupervisorCode";
        x.Caption = "Supervisor Code";
        x.VisibleIndex = 5;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='SupervisorCode'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    //Mantis Issue 24928
    settings.Columns.Add(x =>
    {
        x.FieldName = "Address";
        x.Caption = "Address";
        x.VisibleIndex = 6;
        x.Width = 250;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Address'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Pincode";
        x.Caption = "Pincode";
        x.VisibleIndex = 7;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Pincode'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    //End of Mantis Issue 24928
    settings.Columns.Add(x =>
    {
        x.FieldName = "country";
        x.Caption = "Country";
        x.VisibleIndex = 8;
        x.Width = 150;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='country'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "state";
        x.Caption = "State";
        x.VisibleIndex = 9;
        x.Width = 150;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='state'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "city";
        x.Caption = "District";
        x.VisibleIndex = 10;
        x.Width = 150;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='city'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "area";
        x.Caption = "Area";
        x.VisibleIndex = 11;
        x.Width = 150;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='area'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "PP_CODE";
        x.Caption = "PP Code";
        x.VisibleIndex = 12;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PP_CODE'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "PP_Name";
        x.Caption = "PP Name";
        x.VisibleIndex = 13;
        x.Width = 200;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PP_Name'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "PP_LOCATION";
        x.Caption = "PP Location";
        x.VisibleIndex = 14;
        x.Width = 250;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PP_LOCATION'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "DD_CODE";
        x.Caption = "DD Code";
        x.VisibleIndex = 15;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='DD_CODE'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "DD_Name";
        x.Caption = "DD Name";
        x.VisibleIndex = 16;
        x.Width = 200;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='DD_Name'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "DD_LOCATION";
        x.Caption = "DD Location";
        x.VisibleIndex = 17;
        x.Width = 250;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='DD_LOCATION'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Outlet_Code";
        x.Caption = "Outlet Code";
        x.VisibleIndex = 18;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Outlet_Code'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Outlet_Name";
        x.Caption = "Outlet Name";
        x.VisibleIndex = 19;
        x.Width = 200;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Outlet_Name'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Outlet_type";
        x.Caption = "Outlet Type";
        x.VisibleIndex = 20;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Outlet_type'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    //Rev 1.0
    settings.Columns.Add(x =>
    {
        x.FieldName = "PARTYSTATUS";
        x.Caption = "Party Status";
        x.VisibleIndex = 20;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PARTYSTATUS'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    //Rev 1.0 End
    // Mantis Issue 25421
    settings.Columns.Add(x =>
    {
        x.FieldName = "Beat";
        x.Caption = "Beat";
        x.VisibleIndex = 21;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Beat'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    // End of Mantis Issue 25421

    settings.Columns.Add(x =>
    {
        x.FieldName = "Outlet_owner";
        x.Caption = "Outlet Owner";
        x.VisibleIndex = 22;
        x.Width = 150;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Outlet_owner'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "Outlet_ContactNo";
        x.Caption = "Outlet Contact No";
        x.VisibleIndex = 23;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='Outlet_ContactNo'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "AlternateNo";
        x.Caption = "Alternate No";
        x.VisibleIndex = 24;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='AlternateNo'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OutletLocation";
        x.Caption = "Outlet Location";
        x.VisibleIndex = 25;
        x.Width = 250;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OutletLocation'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OutletStatus";
        x.Caption = "Outlet Status";
        x.VisibleIndex = 26;
        x.Width = 100;
        //Mantis Issue 24928
        //x.CellStyle.ForeColor = Color.Red;
        x.CellStyle.Font.Bold = true;
        //settings.Styles.Cell.ForeColor = System.Drawing.Color.Green;
        //x.CellStyle.ForeColor = System.Drawing.Color.Green;
        x.SetDataItemTemplateContent(c =>
        {
            string Temp = Convert.ToString(DataBinder.Eval(c.DataItem, "OutletStatus"));
            if (Temp == "Active")
                // x.CellStyle.BackColor =
                //x.CellStyle.ForeColor = System.Drawing.Color.Green;
                ViewContext.Writer.Write("<span style=\"color:Green\">" + c.Text + "</span>");
            else
                //x.CellStyle.BackColor = DXColor.Red;
                //settings.Styles.Cell.ForeColor = System.Drawing.Color.Red;
                //x.CellStyle.ForeColor = System.Drawing.Color.Red;
                ViewContext.Writer.Write("<span style=\"color:Red\">" + c.Text + "</span>");
        });
        //End of Mantis Issue 24928

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OutletStatus'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OutletSpecify";
        x.Caption = "Outlet Specify";
        x.VisibleIndex = 27;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OutletSpecify'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OwnerDOB";
        x.Caption = "Owner DOB";
        x.VisibleIndex = 28;
        x.Width = 100;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy";

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OwnerDOB'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OwnerAnniversary";
        x.Caption = "Owner Anniversary";
        x.VisibleIndex = 29;
        x.Width = 100;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy";

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OwnerAnniversary'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "PanCard";
        x.Caption = "Pan Card";
        x.VisibleIndex = 30;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PanCard'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "AdhaarCard";
        x.Caption = "Aadhaar Card";
        x.VisibleIndex = 31;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='AdhaarCard'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OutletLat";
        x.Caption = "Outlet Lat";
        x.VisibleIndex = 32;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OutletLat'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "OutletLong";
        x.Caption = "Outlet Long";
        x.VisibleIndex = 33;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='OutletLong'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "CreateOn";
        x.Caption = "Created On";
        x.VisibleIndex = 35;
        x.Width = 100;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy HH:mm:ss";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy HH:mm:ss";

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='CreateOn'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "CreateBy";
        x.Caption = "Created By";
        x.VisibleIndex = 36;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='CreateBy'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "UpdateOn";
        x.Caption = "Updated On";
        x.VisibleIndex = 37;
        x.Width = 100;
        x.ColumnType = MVCxGridViewColumnType.DateEdit;
        x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy HH:mm:ss";
        (x.PropertiesEdit as DateEditProperties).EditFormatString = "dd-MM-yyyy HH:mm:ss";

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='UpdateOn'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });

    settings.Columns.Add(x =>
    {
        x.FieldName = "UpdateBy";
        x.Caption = "Updated By";
        x.VisibleIndex = 38;
        x.Width = 100;

        // Rev 2.0
        if (ViewBag.RetentionColumn != null)
        {
            System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='UpdateBy'");
            if (row != null && row.Length > 0)  /// Check now
            {
                x.Visible = false;
            }
            else
            {
                x.Visible = true;
            }
        }
        else
        {
            x.Visible = true;
        }
        // End of Rev 2.0
    });
    //REV 3.0

    if (ViewBag.WillShowLoanDetailsInParty == "1")
    {
        settings.Columns.Add(x =>
        {
            x.FieldName = "BKT";
            x.Caption = "BKT";
            x.VisibleIndex = 39;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='BKT'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });
        settings.Columns.Add(x =>
        {
            x.FieldName = "TOTALOUTSTANDING";
            x.Caption = "TOTAL OUTSTANDING";
            x.VisibleIndex = 40;
            x.Width = 100;
            x.PropertiesEdit.DisplayFormatString = "0.00";

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='TOTALOUTSTANDING'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "POS";
            x.Caption = "POS";
            x.VisibleIndex = 41;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='POS'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "ALLCHARGES";
            x.Caption = "ALL CHARGES";
            x.VisibleIndex = 42;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='ALLCHARGES'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "TOTALCOLLECTABLE";
            x.Caption = "TOTAL COLLECTABLE";
            x.VisibleIndex = 43;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='TOTALCOLLECTABLE'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "WORKABLE";
            x.Caption = "WORKABLE";
            x.VisibleIndex = 44;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='WORKABLE'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "PTPDATE";
            x.Caption = "PTP DATE";
            x.VisibleIndex = 45;
            x.Width = 100;
            x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PTPDATE'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "PTPAMOUNT";
            x.Caption = "PTP AMOUNT";
            x.VisibleIndex = 46;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='PTPAMOUNT'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });


        settings.Columns.Add(x =>
        {
            x.FieldName = "COLLECTIONDATE";
            x.Caption = "COLLECTION DATE";
            x.VisibleIndex = 47;
            x.Width = 100;
            x.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='COLLECTIONDATE'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "COLLECTIONAMOUNT";
            x.Caption = "COLLECTION AMOUNT";
            x.VisibleIndex = 48;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='COLLECTIONAMOUNT'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "EMIAMOUNT";
            x.Caption = "EMI AMOUNT";
            x.VisibleIndex = 49;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='EMIAMOUNT'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "RISK";
            x.Caption = "RISK";
            x.VisibleIndex = 50;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='RISK'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "DISPOSITIONCODE";
            x.Caption = "DISPOSITION CODE";
            x.VisibleIndex = 51;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='DISPOSITIONCODE'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

        settings.Columns.Add(x =>
        {
            x.FieldName = "FINALSTATUS";
            x.Caption = "FINAL STATUS";
            x.VisibleIndex = 52;
            x.Width = 100;

            // Rev 2.0
            if (ViewBag.RetentionColumn != null)
            {
                System.Data.DataRow[] row = ViewBag.RetentionColumn.Select("ColumnName='FINALSTATUS'");
                if (row != null && row.Length > 0)  /// Check now
                {
                    x.Visible = false;
                }
                else
                {
                    x.Visible = true;
                }
            }
            else
            {
                x.Visible = true;
            }
            // End of Rev 2.0
        });

    }

    //REV 3.0 END






    settings.Columns.Add(x =>
    {
        x.SetDataItemTemplateContent(tc =>
        {
            // Rev 3.0
            //ViewContext.Writer.Write(
            //    //Rev 1.0: action icon change
            //    //"<div class=''><a href=\"javascript:void(0);\" onclick=\"OpenShopforEdit('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Modify\"><span class='ico editColor mr-3'><i class='fa fa-pencil' aria-hidden='true'></i></span></a>" +
            //    "<div class=''><a href=\"javascript:void(0);\" onclick=\"OpenShopforEdit('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Modify\"><img src=\"../../../assests/images/Edit.png\" /></a>" +
            //     "" +
            //     //"<a href=\"javascript:void(0);\" onclick=\"ShopActiveInactive('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Change Status\"><span class='ico editColor mr-3'><i class='fa fa-undo' aria-hidden='true'></i></span></a>" +
            //     "<a href=\"javascript:void(0);\" onclick=\"ShopActiveInactive('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Change Status\"><img src=\"../../../assests/images/change-status.png\" /></a>" +
            //      "" +
            //    //"<a href=\"javascript:void(0);\" onclick=\"OnClickDeleteForm('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Delete\"><span class='ico deleteColor mr-3'><i class='fa fa-trash' aria-hidden='true'></i></span></a></div>"
            //    "<a href=\"javascript:void(0);\" onclick=\"OnClickDeleteForm('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"\" title=\"Delete\"><img src=\"../../../assests/images/Delete.png\" /></a></div>"
            //);

            if (ViewBag.CanDelete)
            {
                ViewContext.Writer.Write(
                    "<div class=''><a href=\"javascript:void(0);\" onclick=\"OpenShopforEdit('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"tooltip-container\"><img src=\"../../../assests/images/Edit.png\" /><div class=\"tooltip\">Modify</div></a>" +
                     "" +
                     "<a href=\"javascript:void(0);\" onclick=\"ShopActiveInactive('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"tooltip-container\" ><img src=\"../../../assests/images/change-status.png\" /><div class=\"tooltip\">Change Status</div></a>" +
                      "" +
                    "<a href=\"javascript:void(0);\" onclick=\"OnClickDeleteForm('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"tooltip-container\"><img src=\"../../../assests/images/Delete.png\" /><div class=\"tooltip\">Delete</div></a></div>"
                );
            }
            else
            {
                ViewContext.Writer.Write(
                    "<div class=''><a href=\"javascript:void(0);\" onclick=\"OpenShopforEdit('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"tooltip-container\" ><img src=\"../../../assests/images/Edit.png\" /><div class=\"tooltip\">Modify</div></a>" +
                     "" +
                     "<a href=\"javascript:void(0);\" onclick=\"ShopActiveInactive('" + Convert.ToString(DataBinder.Eval(tc.DataItem, "ShopCode")) + "')\" class=\"tooltip-container\" ><img src=\"../../../assests/images/change-status.png\" /><div class=\"tooltip\">Change Status</div></a>"
                );
            }
            // End of Rev 2.0



        });
        x.Settings.AllowDragDrop = DefaultBoolean.False;
        x.Settings.AllowSort = DefaultBoolean.False;
        x.Width = 120;
        x.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        x.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;


        x.Caption = "Action";
        x.VisibleIndex = 53;
        //x.Width = 50;
        //x.SetDataItemTemplateContent(c =>
        //{floatedBtnArea
        //    ViewContext.Writer.Write("<a style='cursor:pointer' onclick=\"OpenShopforEdit('" + Convert.ToString(DataBinder.Eval(c.DataItem, "ShopCode")) + "')\">Modify</a>");
        //});

    });




}).Bind(Model).GetHtml()


