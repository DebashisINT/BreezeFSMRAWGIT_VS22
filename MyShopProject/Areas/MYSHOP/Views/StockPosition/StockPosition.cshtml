@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                07-02-2023        2.0.39           Pallab              25576: Report page design modification *@
@*====================================================== Revision History ==========================================================*@

@model MyShop.Models.StockPositionModel

@{
    ViewBag.Title = "Stock Position";
    /// Layout = "~/Views/Shared/_Layout.cshtml";
}






<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>


<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
<link href="~/Content/media.css" rel="stylesheet" />

<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/pluggins/choosen/choosen.min.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>
<link href="~/assests/css/custom/PMSStyles.css" rel="stylesheet" />

<style>
    #StateGridLookup_CC {
        width: 100%;
    }
</style>
<style>
    .pmsModal .modal-header {
        background: #298ecc !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 20px 20px 0 0;
        color: #fff;
    }

    .pmsModal .modal-content {
        border: none;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal.w70 .modal-dialog {
        width: 70%;
    }

    #myModal label {
        font-weight: 500;
        margin-top: 5px;
    }

    .red {
        color: red;
    }

    .sample {
        font-size: 12px;
        color: #d48a28;
    }

    .buttonphoto {
        padding: 11px 12px;
        display: inline-block;
        background: #dee3f7;
        margin-top: 11px;
        border-radius: 3px;
        cursor: pointer;
    }

        .buttonphoto:hover {
            background: #415ed2;
            color: #fff;
        }

    .infoQ {
        color: #4b98b8;
        margin-left: 5px;
        cursor: pointer;
    }

    #PanModel {
        z-index: 9999;
    }

    .inputShrink select:not(.btn), .inputShrink .form-control:not(textarea) {
        height: 30px;
        padding: 3px 12px;
    }
</style>
<script>
    var is_pageload = "0";
    $(function () {

        gridStockPosition.Refresh();
        gridStockPosition.Refresh();

        var d = new Date();

        dtFrom.SetValue(d);
        dtTo.SetValue(d);

        //var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        //lookup.GetGridView().Refresh();
        //var lookup = ASPxClientControl.GetControlCollection().GetByName("StateGridLookup");
        //lookup.GetGridView().Refresh();



        $('#txtfromDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            locale: {
                format: 'DD-MM-YYYY'
            },
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var mindt = new Date(selectedDate.getTime() + 1);
                $("#txttoDate").daterangepicker("option", "minDate", mindt);
            }
        });

        $('#txttoDate').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            mask: true,
            locale: {
                format: 'DD-MM-YYYY'
            },
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var maxdt = new Date(selectedDate.getTime() - 1);
                $("#txtfromDate").daterangepicker("option", "maxDate", maxdt);

            }
        });





        $('body').on('click', '#btnshow', function () {
            GetProdSelectedFieldValuesOndemand($("#hdnProductId").val());
            var flag = true;

            if (dtFrom.GetDate() == null) {
                $('#MandatoryFromDate').attr('style', 'display:block');
                flag = false;
            }
            else {
                $('#MandatoryFromDate').attr('style', 'display:none');
            }

            if (dtTo.GetDate() == null) {
                $('#MandatoryToDate').attr('style', 'display:block');
                flag = false;
            }
            else {
                $('#MandatoryToDate').attr('style', 'display:none');
            }

            //if ($("#hdnStateMandatory").val() == "True") {
            //    if (StateId == "") {
            //        //  $('#MandatoryState').attr('style', 'display:block');
            //        jAlert("Please select State.");
            //        flag = false;
            //    }
            //    else {
            //     //   $('#MandatoryState').attr('style', 'display:none');
            //    }
            //}
            datefrm = dtFrom.GetText();
            var newdatefrom = datefrm.split("-").reverse().join("-");

            var startdate = new Date(Date.parse(newdatefrom));
            //  alert(startdate);


            dateto = dtTo.GetText();
            var newdateTo = dateto.split("-").reverse().join("-");

            var endDate = new Date(Date.parse(newdateTo));

            if (endDate < startdate) {

                jAlert('From date should be before/equal To date');
            }

            else {
                //$("#refreshgridsalessummary").show();
                if (flag == true) {
                    is_pageload = "1";
                  //  gridStockPosition.Refresh();
                    //gridsalessummaryregister.Refresh();
                    var start = $('#dtFrom_I').val();
                    var end = $('#dtTo_I').val();
                    start = start.split('-')[1] + '-' + start.split('-')[0] + '-' + start.split('-')[2];
                    end = end.split('-')[1] + '-' + end.split('-')[0] + '-' + end.split('-')[2];

                    var dayse = Math.round((Date.parse(end) - Date.parse(start)) / (1000 * 60 * 60 * 24));
                    //if (dayse <= 7) {
                    //Mantis Issue 24728
                    //if (dayse <= 30) {
                    //alert(dayse)
                    //if (dayse <= 34) {
                    ////End of Mantis Issue 24728
                    //    gridStockPosition.Refresh();
                    //}
                    //else {
                    //    //jAlert("Searching days must be within 7 days");
                    //    //Mantis Issue 24728
                    //    //jAlert("Searching days must be within One month");
                    //    jAlert("Searching days must be within 35 days");
                    //    //End of Mantis Issue 24728
                    //}
                    gridStockPosition.Refresh();
                }
            }




        });



        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                //var desg = $("#drpdesignation").val();
                var usrtype = $("#ddlusertypes").val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportStockPositionList", "StockPosition", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);


            }
        });


    })
    function Export2ndstageGrid() {
        var url = '@Url.Action("ExportStockPositionDetailsList", "StockPosition", new { type = "_type_" })'
        window.location.href = url.replace("_type_", 3);
    }
    //function StateStartCallback(s, e) {
    //    e.customArgs["UserID"] = $("#hdnUserID").val();
    //}

    //function EmpStateLookupValChange() {
    //    StateGridLookup.GetGridView().Refresh();
    //    StateGridLookup.GetGridView().Refresh();
    //}

    function OnStartCallback(s, e) {

        e.customArgs["Fromdate"] = dtFrom.GetText();
        e.customArgs["Todate"] = dtTo.GetText();
        //e.customArgs["StateId"] = StateId;
        //e.customArgs["desgid"] = desigId;
        e.customArgs["prodcode"] = prodId;
        e.customArgs["is_pageload"] = is_pageload;

        // alert(e.customArgs["StateId"]);

    }

    //var StateId = [];
    //function StateSelectionChanged(s, e) {
    //    StateGridLookup.gridView.GetSelectedFieldValues("ID", GetSelectedFieldValuesCallback);
    //}
    //function GetSelectedFieldValuesCallback(values) {

    //    try {
    //        StateId = [];
    //        for (var i = 0; i < values.length; i++) {
    //            StateId.push(values[i]);
    //        }
    //    } finally {
    //        console.log(StateId);
    //    }


    //}

    //var desigId = [];
    //function DesigSelectionChanged(s, e) {
    //    DesigGridLookup.gridView.GetSelectedFieldValues("desgid", GetDesigSelectedFieldValuesCallback);
    //}
    //function GetDesigSelectedFieldValuesCallback(values) {
    //    try {
    //        desigId = [];
    //        for (var i = 0; i < values.length; i++) {
    //            desigId.push(values[i]);
    //        }
    //    } finally {
    //        console.log(desigId);
    //    }
    //}

    var prodId = [];
    function ProdSelectionChanged(s, e) {
        ProdGridLookup.gridView.GetSelectedFieldValues("prodcode", GetProdSelectedFieldValuesCallback);
    }
    function GetProdSelectedFieldValuesCallback(values) {
        try {
            prodId = [];
            for (var i = 0; i < values.length; i++) {
                prodId.push(values[i]);
            }
        } finally {
            console.log(prodId);
        }
    }


    function LookupValChange() {
        ProdGridLookup.GetGridView().Refresh()
        //ProdGridLookup.GetGridView().Refresh()
    }

    //function EmpStartCallback(s, e) {
    //    e.customArgs["StateId"] = StateId;
    //    e.customArgs["desgid"] = desigId;
    //    e.customArgs["userId"] = $("#hdnUserID").val();
    //}
    function DateValidateFrom() {
        if (dtTo.GetDate()) {
            if (dtTo.GetDate() < dtFrom.GetDate()) {
                dtTo.SetValue(dtFrom.GetDate());
            }
        }
    }

    function DateValidateTo() {
        if (dtFrom.GetDate()) {
            if (dtTo.GetDate() < dtFrom.GetDate()) {
                dtTo.SetValue(dtFrom.GetDate());
            }
        }
    }

</script>
<style>
    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }



    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #StateGridLookup_ET > tbody > tr > td:first-child, #DesigGridLookup_ET > tbody > tr > td:first-child, #ProdGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }

    .validclass {
        position: absolute;
        right: 3px;
        top: 32px;
    }

    /*Rev 1.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 9px;
        right: 24px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 39px;
            right: 18px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        background: #094e8c !important;
        background-image: none !important;
        padding: 11px 20px;
        border: none;
        border-radius: 5px 5px 0 0;
        color: #fff;
        border-radius: 10px 10px 0 0;
    }

    .pmsModal .modal-content {
        border: none;
        border-radius: 10px;
    }

    .pmsModal .modal-header .modal-title {
        font-size: 14px;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    .dxeCalendarSelected_PlasticBlue {
        color: White;
        background-color: #185598;
    }

    .btn-default {
        background: #d8d8d8;
    }

    /*Rev end 1.0*/
</style>

<script>
    function onShowChooserClick(s, e) {
        UpdateCustomizationWindowVisibility();
    }
    var visibleColumn = [];
    function grid_CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();

        for (var i = 0; i <= gridStockPosition.GetColumnsCount() ; i++) {
            if (gridStockPosition.GetColumn(i) != null) {
                if (gridStockPosition.GetColumn(i).visible == false) {
                    console.log(gridStockPosition.GetColumn(i).fieldName);
                    visibleColumn.push(gridStockPosition.GetColumn(i).fieldName);
                }
            }
        }

        addPageRetention(visibleColumn);
    }

    function UpdateCustomizationWindowVisibility() {
        if (gridStockPosition.IsCustomizationWindowVisible())
            gridStockPosition.HideCustomizationWindow();
        else
            gridStockPosition.ShowCustomizationWindow();
        UpdateButtonText();
    }

    function UpdateButtonText() {
        var text = gridStockPosition.IsCustomizationWindowVisible() ? "Hide" : "Show";
        text += " Column Chooser";
        btShowColumnChooser.SetText(text);
    }

    function addPageRetention(visibleColumn) {
        $.ajax({
            url: "@Url.Action("PageRetention", "StockPosition")",
            async: false,
            data: { Columns: visibleColumn },
            type: 'POST',
            success: function (data) {
                gridStockPosition.Refresh();
            },
            error: function () {
            },
        });

    }

</script>


<script>
    $(document).ready(function () {
        $('#ProductModel').on('shown.bs.modal', function () {
            $('#txtProductSearch').focus();
        })
    })
    var ProdArr = new Array();
    $(document).ready(function () {
        var ProdObj = new Object();
        ProdObj.Name = "ProductSource";
        ProdObj.ArraySource = ProdArr;
        arrMultiPopup.push(ProdObj);
    })

    function ProductButnClick(s, e) {
        $('#ProductModel').modal('show');
    }

    function Product_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#ProductModel').modal('show');
        }
    }

    function Productkeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtProductSearch").val()) == "" || $.trim($("#txtProductSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtProductSearch").val();
        OtherDetails.ClassID = "";

        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Product Name");
            HeaderCaption.push("Product Code");


            if ($("#txtProductSearch").val() != "") {
                callonServerM("../../../Models/ShopAddress.asmx/GetProductList", OtherDetails, "ProductTable", HeaderCaption, "dPropertyIndex", "SetSelectedValues", "ProductSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtProductSearch').focus();
        else
            $('#txtProductSearch').focus();
    }

    function SetSelectedValues(Id, Name, ArrName) {
        if (ArrName == 'ProductSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#ProductModel').modal('hide');
                ProductTxt.SetText(Name);
                $('#hdnProductId').val(key);
            }
            else {
                ProductTxt.SetText('');
                $('#hdnProductId').val('');
            }
        }
    }

    function GetProdSelectedFieldValuesOndemand(values) {
        try {
            prodId = [];
            var eids = values.split(',');
            for (var i = 0; i < eids.length; i++) {
                prodId.push(eids[i]);
            }
        } finally {
            console.log(prodId);
        }
    }
</script>
<script>
    function Open2ndStage(val) {
        //var flag = true;

        //if (dtFrom.GetDate() == null) {
        //    $('#MandatoryFromDate').attr('style', 'display:block');
        //    flag = false;
        //}
        //else {
        //    $('#MandatoryFromDate').attr('style', 'display:none');
        //}

        //if (dtTo.GetDate() == null) {
        //    $('#MandatoryToDate').attr('style', 'display:block');
        //    flag = false;
        //}
        //else {
        //    $('#MandatoryToDate').attr('style', 'display:none');
        //}

        //datefrm = dtFrom.GetText();
        //var newdatefrom = datefrm.split("-").reverse().join("-");
        //var startdate = new Date(Date.parse(newdatefrom));

        //dateto = dtTo.GetText();
        //var newdateTo = dateto.split("-").reverse().join("-");
        //var endDate = new Date(Date.parse(newdateTo));

        prodId = val;

        $("#2ndStageListModal").modal('show');
        gridStockPositionDetails.Refresh();
        gridStockPositionDetails.Refresh();
    }
    $(function () {
        //$('[data-toggle="tooltip"]').tooltip()
        $('body').tooltip({
            selector: '[data-toggle="tooltip"]',
            animation: true
        });
    })
</script>
<link href="~/Content/media.css" rel="stylesheet" />
<div class="breadCumb">
    <span>Stock Position</span>
</div>

<div class="container">
    <div class="backBox mt-5 p-3 ">
        <div class="px-4">
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        <table class="eqpadtbl mb-3">
                            <tr>
                                @*Rev 1.0*@
                                @*<td class="w150 relative">*@
                                <td class="w150 relative for-cust-icon">
                                    @*Rev end 1.0*@
                                    <label>From Date</label>
                                    <div>
                                        @Html.DevExpress().DateEditFor(x => x.Fromdate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtFrom";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.ShowOutOfRangeWarning = false;
                                    deSettings.Properties.ClientSideEvents.DateChanged = "DateValidateFrom";
                                }).GetHtml()
                                        @*Rev 1.0*@
                                        <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                        @*Rev end 1.0*@
                                        <span id="MandatoryFromDate" style="display: none" class="validclass">
                                            <img id="img_MandatoryFromDate" class="dxEditors_edtError_PlasticBlue" src="/DXR.axd?r=1_36-tyKfc" title="Mandatory">
                                        </span>
                                    </div>
                                </td>
                                @*Rev 1.0*@
                                @*<td class="w150 relative">*@
                                <td class="w150 relative for-cust-icon">
                                    @*Rev end 1.0*@
                                    <label>To Date</label>
                                    <div>
                                        @*@Html.TextBoxFor(m => m.Todate, new { @class = "form-control", @id = "txttoDate", @radonly = true, @tabindex = 3 })*@
                                        @Html.DevExpress().DateEditFor(x => x.Todate,
                                deSettings =>
                                {
                                    deSettings.Name = "dtTo";
                                    deSettings.Date = DateTime.Now;
                                    deSettings.Properties.UseMaskBehavior = true;
                                    deSettings.Properties.EditFormat = EditFormat.Custom;
                                    deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    deSettings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.EditFormatString = "dd-MM-yyyy";
                                    deSettings.Properties.ShowOutOfRangeWarning = false;
                                    deSettings.Properties.ClientSideEvents.DateChanged = "DateValidateTo";

                                }).GetHtml()
                                        @*Rev 1.0*@
                                        <img src="/assests/images/calendar-icon.png" class="calendar-icon" />
                                        @*Rev end 1.0*@
                                        <span id="MandatoryToDate" style="display: none" class="validclass">
                                            <img id="img_MandatoryToDate" class="dxEditors_edtError_PlasticBlue" src="/DXR.axd?r=1_36-tyKfc" title="Mandatory">
                                        </span>
                                    </div>
                                </td>



                                @*<td class="w150">
            <label>State </label>
            <div>
                @Html.Action("GetEmployeeWiseStateList", "MasterPopulate", new { UserID = @Session["userid"].ToString() })
            </div>
        </td>*@
                                @*<td class="w150">
            <label>Designation</label>
            <div>

                @Html.Action("GetDesigList", "SalesReportSummary")


            </div>
        </td>*@
                                <td class="w150">
                                    <label>Product(s)</label>
                                    <div>
                                        @*@Html.Action("GetEmpList", "MasterPopulate", new { userId = @Session["userid"].ToString() })*@

                                        @Html.DevExpress().ButtonEdit(
                                settings =>
                                {
                                    settings.Name = "ProductTxt";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    //settings.Text = Model.AssignedTo;
                                    settings.ReadOnly = true;
                                    settings.Properties.Buttons.Add("...");
                                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){ProductButnClick(s,e);}";
                                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Product_KeyDown(s,e);}";

                                }).GetHtml()

                                    </div>
                                </td>
                                @*Rev 1.0*@
                                @*<td style="padding-top: 22px;width:170px;">*@
                                <td style="padding-top: 24px;width:190px;">
                                    @*Rev end 1.0*@
                                    <label></label>
                                    <button type="button" id="btnshow" class="btn btn-success btnwidth" tabindex=4>Show</button>
                                    <select name="ddlAppIds" class="btn btn-sm btn-primary" id="ddlAppIds">
                                        <option value="0">Export to</option>
                                        <option value="1">PDF</option>
                                        <option value="2">XLSX</option>
                                        <option value="3">XLS</option>
                                        <option value="4">RTF</option>
                                        <option value="5">CSV</option>

                                    </select>

                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

            </div>
            <input type="hidden" id="hdnuser_id" />
            <input type="hidden" id="hdnuser_state" />
            <input type="hidden" id="hdnuser_shop" />
            <input type="hidden" id="hdnUserID" value="@Session["userid"].ToString()" />
            @*<input type="hidden" id="hdnStateMandatory" value="@ViewBag.StateMandatory" />*@
        </div>
        @*Rev 1.0*@
    @*</div>
</div>*@
@*Rev end 1.0*@
@*<div style="clear: both;"><br /></div>*@
@*Rev 1.0*@
@*<div class="container">
    <div class="backBox mt-4 p-3 ">*@
        @*Rev end 1.0*@
        <div class="px-4">
            <div class="options">
                <div class="options-item">
                    @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btShowColumnChooser";
                    settings.Text = "Show Column Chooser";
                    settings.ClientSideEvents.Click = "function (s, e) { onShowChooserClick(s,e); }";
                    // settings.Theme = "MaterialCompactOrange";
                }).GetHtml()
                </div>
            </div>
            <div class="row">
                <div id="refreshgridsalessummary">
                    @{
                        Html.RenderAction("GetStockPositionList", "StockPosition", new { Fromdate = Model.Fromdate, Todate = Model.Todate, prodcode = Model.product, is_pageload = "0" });
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!--Product Modal -->
<div class="modal fade pmsModal w50" id="ProductModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Product Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control" onkeydown="Productkeydown(event)" id="txtProductSearch" width="100%" placeholder="Search By Product Name" />
                <div id="ProductTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Product Name</th>
                            <th>Product Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('ProductSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('ProductSource')">OK</button>
                @*<button type="button" class="btnOkformultiselection btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnProductId" runat="server" />
<!--Product Modal -->
<!--Details Modal -->
<div id="2ndStageListModal" class="modal fade pmsModal w90" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <h4 class="modal-title">Invoice details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <span class="btn-excel mr0 salesExport"><img src="/assests/images/excel.png" title="Export To Excel" style="width: 24px;" onclick="Export2ndstageGrid()"></span>
                        @{
                            Html.RenderAction("GetStockPositionDetailsList", "StockPosition");
                        }
                    </div>
                </div>
                <div class="row">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-success" data-dismiss="modal">OK</button>*@
            </div>
        </div>

    </div>
</div>
<!--Details Modal -->